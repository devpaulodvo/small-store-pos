{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Cart/ViewCart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport styles from './ViewCart.module.css';\nimport cart from '../../img/trolley.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewCart = () => {\n  _s();\n\n  const [view, setView] = useState(false);\n  const modalRef = useRef();\n  useEffect(() => {}, []);\n\n  const openModal = () => {\n    setView(prev => !prev);\n  };\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setView(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: !view ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.container}`,\n      onClick: () => {\n        openModal();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cart,\n        alt: \"cart\",\n        className: `${styles.cart}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.overlay}`,\n        ref: modalRef,\n        onClick: () => {\n          closeModal();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.viewcart}`,\n          id: \"viewcart\",\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewCart, \"3fGbqM+LvxDdeQ2INli3Rot2S0w=\");\n\n_c = ViewCart;\nexport default ViewCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCart\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Cart/ViewCart.js"],"names":["React","useEffect","useState","useRef","styles","cart","ViewCart","view","setView","modalRef","openModal","prev","closeModal","e","current","target","container","overlay","viewcart"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMO,QAAQ,GAAGN,MAAM,EAAvB;AAEAF,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMS,SAAS,GAAG,MAAM;AAEhBF,IAAAA,OAAO,CAACG,IAAI,IAAI,CAACA,IAAV,CAAP;AAEP,GAJD;;AAMA,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACpB,QAAGJ,QAAQ,CAACK,OAAT,KAAqBD,CAAC,CAACE,MAA1B,EAAiC;AAC7BP,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAJD;;AAMA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACK,CAACD,IAAD,gBAEG;AAAK,MAAA,SAAS,EAAG,GAAEH,MAAM,CAACY,SAAU,EAApC;AAAuC,MAAA,OAAO,EAAE,MAAI;AAACN,QAAAA,SAAS;AAAG,OAAjE;AAAA,6BACI;AAAK,QAAA,GAAG,EAAEL,IAAV;AAAgB,QAAA,GAAG,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAG,GAAED,MAAM,CAACC,IAAK;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFH,gBAMG,QAAC,KAAD,CAAO,QAAP;AAAA,6BAEA;AAAK,QAAA,SAAS,EAAG,GAAED,MAAM,CAACa,OAAQ,EAAlC;AAAqC,QAAA,GAAG,EAAER,QAA1C;AAAoD,QAAA,OAAO,EAAE,MAAI;AAC7DG,UAAAA,UAAU;AACT,SAFL;AAAA,+BAII;AAAK,UAAA,SAAS,EAAG,GAAER,MAAM,CAACc,QAAS,EAAnC;AACA,UAAA,EAAE,EAAC,UADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA7CD;;GAAMZ,Q;;KAAAA,Q;AA+CN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport styles from './ViewCart.module.css';\nimport cart from '../../img/trolley.png';\n\nconst ViewCart = () => {\n    const [view, setView] = useState(false);\n    \n    const modalRef = useRef();\n\n    useEffect(() => {\n\n    }, [])\n    \n    const openModal = () => {\n        \n            setView(prev => !prev);\n        \n    }\n\n    const closeModal = e => {\n        if(modalRef.current === e.target){\n            setView(false);\n        }\n    }\n\n    return(\n        <React.Fragment>\n            {!view \n            ? \n                <div className={`${styles.container}`} onClick={()=>{openModal()}}>\n                    <img src={cart} alt='cart' className={`${styles.cart}`} /> \n                </div>\n            :\n                <React.Fragment>\n                \n                <div className={`${styles.overlay}`} ref={modalRef} onClick={()=>{\n                    closeModal();\n                    }}>\n                    \n                    <div className={`${styles.viewcart}`}\n                    id='viewcart'>\n                        Check\n                    </div>\n                    \n                </div>\n                </React.Fragment>\n            }\n        </React.Fragment>\n    )\n}\n\nexport default ViewCart;"]},"metadata":{},"sourceType":"module"}