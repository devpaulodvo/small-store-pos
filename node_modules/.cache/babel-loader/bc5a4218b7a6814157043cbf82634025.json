{"ast":null,"code":"import * as Yup from 'yup'; // export let RegisterSchema = Yup.object().shape({\n//     username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username')\n// .test(\"is_exists\", null, (value)=>{\n//     return new Promise((resolve, reject)=>{\n//         try{\n//            if(value.length!==0){\n//                 resolve(false)\n//             }\n//             else{\n//                 resolve(true)\n//             }\n//         }catch(err){\n//             return;\n//         }\n//     })\n// })\n// \n//     ,\n//     password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\n//     cpassword: Yup.string()\n//     .oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password')\n// });\n\nexport let LoginSchema = Yup.object().shape({\n  username: Yup.string().required('Required Username'),\n  password: Yup.string().required(\"Required password\")\n});\nexport let AddProductSchema = Yup.object().shape({\n  productName: Yup.string().required('Product Name is Required'),\n  price: Yup.number('Number only').required('Price is Required')\n});","map":{"version":3,"sources":["F:/React Applications/my-barber/src/Schemas/Schema.js"],"names":["Yup","LoginSchema","object","shape","username","string","required","password","AddProductSchema","productName","price","number"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB,C,CAEA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,WAAW,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD8B;AAExCC,EAAAA,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB;AAF8B,CAAnB,CAAlB;AAKP,OAAO,IAAIE,gBAAgB,GAAGR,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAC7CM,EAAAA,WAAW,EAAET,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CADgC;AAE7CI,EAAAA,KAAK,EAAEV,GAAG,CAACW,MAAJ,CAAW,aAAX,EAA0BL,QAA1B,CAAmC,mBAAnC;AAFsC,CAAnB,CAAvB","sourcesContent":["import * as Yup from 'yup';\r\n\r\n// export let RegisterSchema = Yup.object().shape({\r\n//     username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username')\r\n    // .test(\"is_exists\", null, (value)=>{\r\n    //     return new Promise((resolve, reject)=>{\r\n    //         try{\r\n    //            if(value.length!==0){\r\n    //                 resolve(false)\r\n    //             }\r\n    //             else{\r\n    //                 resolve(true)\r\n    //             }\r\n    //         }catch(err){\r\n    //             return;\r\n    //         }\r\n           \r\n    //     })\r\n    // })\r\n    // \r\n//     ,\r\n//     password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\r\n//     cpassword: Yup.string()\r\n//     .oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password')\r\n// });\r\n\r\nexport let LoginSchema = Yup.object().shape({\r\n    username: Yup.string().required('Required Username'),\r\n    password: Yup.string().required(\"Required password\")\r\n})\r\n\r\nexport let AddProductSchema = Yup.object().shape({\r\n    productName: Yup.string().required('Product Name is Required'),\r\n    price: Yup.number('Number only').required('Price is Required')\r\n})"]},"metadata":{},"sourceType":"module"}