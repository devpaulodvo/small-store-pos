{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = () => {\n  _s();\n\n  const [searchProduct, setSearchProduct] = useState('');\n  const [products, getProducts] = useState([]);\n  this.state = {\n    productname: 'Test'\n  };\n  useEffect(() => {\n    document.getElementById(\"productname\").value = \"asd\";\n    myfunction(); // Axios.get('http://localhost:3001/api/get').then((response)=>{\n    //     getProducts(response.data);\n    // })\n    // return function cleanup() {\n    //   };\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/get');\n    getProducts(result.data);\n  };\n\n  const history = useHistory();\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  const updateProduct = async () => {//  let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\n    //     productName: productName, \n    //     price: productPrice\n    // })\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n\n    if (filteredProductArray.length === 0) {} else {\n      console.log(filteredProductArray[0].productName);\n      setSearchProduct(filteredProductArray[0].productName);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(ProductFilter, {\n      filteredProduct: filteredProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          productName: '',\n          price: ''\n        },\n        validationSchema: AddProductSchema,\n        validateOnBlur: false,\n        validateOnChange: false,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            updateProduct();\n            window.alert(\"Product Updated!\");\n            resetForm({\n              values: ''\n            });\n            setProductName('');\n            setProductPrice('');\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductName(event.target.value.toLowerCase());\n            },\n            readOnly: true,\n            name: \"productName\",\n            id: \"productname\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 70\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductPrice(event.target.value);\n            },\n            readOnly: true,\n            type: \"number\",\n            name: \"price\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 58\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancel(),\n            disabled: isSubmitting,\n            type: \"submit\",\n            className: `${styles.button} ${styles.red}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"g5a8QzeiWo34zmJJdkrH/ragqn0=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js"],"names":["React","useState","useEffect","styles","Axios","Formik","Form","Field","ErrorMessage","useHistory","AddProductSchema","ProductFilter","createRef","UpdateProduct","searchProduct","setSearchProduct","products","getProducts","state","productname","document","getElementById","value","myfunction","result","get","data","history","productName","setProductName","productPrice","setProductPrice","updateProduct","cancel","push","filteredProductArray","filter","product","includes","toLowerCase","filteredProduct","event","target","length","console","log","container","center","h1","price","values","setSubmitting","resetForm","setTimeout","window","alert","isSubmitting","errors","touched","label","input","error","button","red"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEI,OAAKiB,KAAL,GAAa;AAACC,IAAAA,WAAW,EAAG;AAAf,GAAb;AAGJjB,EAAAA,SAAS,CAAC,MAAI;AACVkB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC,GAA+C,KAA/C;AACAC,IAAAA,UAAU,GAFA,CAGV;AACA;AACA;AACA;AACA;AACH,GARQ,EAQP,EARO,CAAT;;AAUA,QAAMA,UAAU,GAAG,YAAY;AAC3B,QAAIC,MAAM,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,+BAAV,CAAnB;AACAR,IAAAA,WAAW,CAACO,MAAM,CAACE,IAAR,CAAX;AACD,GAHH;;AAKA,QAAMC,OAAO,GAAGlB,UAAU,EAA1B;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAM+B,aAAa,GAAG,YAAW,CAC7B;AACA;AACA;AACA;AACH,GALD;;AAOA,QAAMC,MAAM,GAAG,MAAM;AACjBN,IAAAA,OAAO,CAACO,IAAR,CAAa,YAAb;AACH,GAFD;;AAIA,QAAMC,oBAAoB,GAAGnB,QAAQ,CAACoB,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACT,WAAR,CAAoBU,QAApB,CAA6BxB,aAAa,CAACyB,WAAd,EAA7B,CAA3B,CAA7B;;AAEA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B1B,IAAAA,gBAAgB,CAAC0B,KAAK,CAACC,MAAN,CAAapB,KAAd,CAAhB;;AACA,QAAGa,oBAAoB,CAACQ,MAArB,KAAgC,CAAnC,EAAqC,CAEpC,CAFD,MAEK;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYV,oBAAoB,CAAC,CAAD,CAApB,CAAwBP,WAApC;AAEAb,MAAAA,gBAAgB,CAACoB,oBAAoB,CAAC,CAAD,CAApB,CAAwBP,WAAzB,CAAhB;AACH;AACJ,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEzB,MAAM,CAAC2C,SAAU,EAApC;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,eAAe,EAAEN;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAErC,MAAM,CAAC4C,MAAvB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAE5C,MAAM,CAAC6C,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,aAAa,EAAE;AAAEpB,UAAAA,WAAW,EAAE,EAAf;AAAmBqB,UAAAA,KAAK,EAAE;AAA1B,SADnB;AAEI,QAAA,gBAAgB,EAAEvC,gBAFtB;AAGI,QAAA,cAAc,EAAE,KAHpB;AAII,QAAA,gBAAgB,EAAE,KAJtB;AAKI,QAAA,QAAQ,EAAE,CAACwC,MAAD,EAAS;AAACC,UAAAA,aAAD;AAAgBC,UAAAA;AAAhB,SAAT,KAAwC;AAC9CC,UAAAA,UAAU,CAAC,MAAM;AACbrB,YAAAA,aAAa;AACZsB,YAAAA,MAAM,CAACC,KAAP,CAAa,kBAAb;AACDH,YAAAA,SAAS,CAAC;AAACF,cAAAA,MAAM,EAAE;AAAT,aAAD,CAAT;AACArB,YAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,YAAAA,eAAe,CAAC,EAAD,CAAf;AACAoB,YAAAA,aAAa,CAAC,KAAD,CAAb;AACH,WAPS,EAOP,GAPO,CAAV;AAQH,SAdL;AAAA,kBAgBK,CAAC;AAACK,UAAAA,YAAD;AAAeC,UAAAA,MAAf;AAAuBC,UAAAA;AAAvB,SAAD,kBACD,QAAC,IAAD;AAAA,kCACI;AAAO,YAAA,SAAS,EAAEvD,MAAM,CAACwD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AACA,YAAA,OAAO,EAAGlB,KAAD,IAAW;AAACZ,cAAAA,cAAc,CAACY,KAAK,CAACC,MAAN,CAAapB,KAAb,CAAmBiB,WAAnB,EAAD,CAAd;AAAiD,aADtE;AAEA,YAAA,QAAQ,MAFR;AAGA,YAAA,IAAI,EAAC,aAHL;AAIA,YAAA,EAAE,EAAC,aAJH;AAKA,YAAA,SAAS,EAAG,GAAEpC,MAAM,CAACyD,KAAM;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAFJ,EASIH,MAAM,CAAC7B,WAAP,IAAsB8B,OAAO,CAAC9B,WAA9B,gBAA6C;AAAK,YAAA,SAAS,EAAEzB,MAAM,CAAC0D,KAAvB;AAAA,sBAA+BJ,MAAM,CAAC7B;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAA7C,GAAyG,IAT7G,eAWK;AAAO,YAAA,SAAS,EAAEzB,MAAM,CAACwD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXL,eAYI,QAAC,KAAD;AACA,YAAA,OAAO,EAAGlB,KAAD,IAAW;AAACV,cAAAA,eAAe,CAACU,KAAK,CAACC,MAAN,CAAapB,KAAd,CAAf;AAAoC,aADzD;AAEA,YAAA,QAAQ,MAFR;AAGA,YAAA,IAAI,EAAC,QAHL;AAIA,YAAA,IAAI,EAAC,OAJL;AAKA,YAAA,SAAS,EAAG,GAAEnB,MAAM,CAACyD,KAAM;AAL3B;AAAA;AAAA;AAAA;AAAA,kBAZJ,EAmBIH,MAAM,CAACR,KAAP,IAAgBS,OAAO,CAACT,KAAxB,gBAAiC;AAAK,YAAA,SAAS,EAAE9C,MAAM,CAAC0D,KAAvB;AAAA,sBAA+BJ,MAAM,CAACR;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAAjC,GAAuF,IAnB3F,eAqBI;AAAQ,YAAA,QAAQ,EAAE,IAAlB;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAsC,YAAA,QAAQ,EAAEO,YAAhD;AAA8D,YAAA,SAAS,EAAG,GAAErD,MAAM,CAAC2D,MAAO,EAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ,eAwBI;AAAQ,YAAA,OAAO,EAAE,MAAI7B,MAAM,EAA3B;AAA+B,YAAA,QAAQ,EAAEuB,YAAzC;AAAuD,YAAA,IAAI,EAAC,QAA5D;AAAqE,YAAA,SAAS,EAAG,GAAErD,MAAM,CAAC2D,MAAO,IAAG3D,MAAM,CAAC4D,GAAI,EAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH,CA3GD;;GAAMlD,a;UAsBcJ,U;;;KAtBdI,a;AA6GN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom'; \nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\n\n\nconst UpdateProduct = () => {\n    const [searchProduct, setSearchProduct] = useState('');\n    const [products, getProducts] = useState([]);\n\n        this.state = {productname : 'Test'} \n      \n\n    useEffect(()=>{\n        document.getElementById(\"productname\").value = \"asd\";\n        myfunction()\n        // Axios.get('http://localhost:3001/api/get').then((response)=>{\n        //     getProducts(response.data);\n        // })\n        // return function cleanup() {\n        //   };\n    },[]);\n\n    const myfunction = async () => {\n        let result = await Axios.get('http://localhost:3001/api/get')\n        getProducts(result.data);\n      }\n\n    const history = useHistory();\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    const updateProduct = async () =>{\n        //  let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\n        //     productName: productName, \n        //     price: productPrice\n        // })\n    }\n\n    const cancel = () => {\n        history.push('/dashboard');\n    }\n\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n    const filteredProduct = (event) => {\n        setSearchProduct(event.target.value);\n        if(filteredProductArray.length === 0){\n\n        }else{\n            console.log(filteredProductArray[0].productName)\n\n            setSearchProduct(filteredProductArray[0].productName);\n        }\n    }\n\n    return(\n        <div className={`${styles.container}`}> \n            <ProductFilter filteredProduct={filteredProduct}/>\n            <div className={styles.center}>\n                <h1 className={styles.h1}>Update Product</h1>\n                <Formik\n                    initialValues={{ productName: '', price: ''}}\n                    validationSchema={AddProductSchema}\n                    validateOnBlur={false}\n                    validateOnChange={false}\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\n                        setTimeout(() => {\n                            updateProduct()\n                             window.alert(\"Product Updated!\")\n                            resetForm({values: ''});\n                            setProductName('');\n                            setProductPrice('');\n                            setSubmitting(false);\n                        }, 100);\n                    }}\n                >\n                    {({isSubmitting, errors, touched})=>(\n                    <Form>\n                        <label className={styles.label}>Product Name</label>\n                        <Field \n                        onKeyUp={(event) => {setProductName(event.target.value.toLowerCase())}} \n                        readOnly\n                        name=\"productName\"\n                        id=\"productname\"\n                        className={`${styles.input}`}/>\n                        {\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <Field \n                        onKeyUp={(event) => {setProductPrice(event.target.value)}} \n                        readOnly\n                        type=\"number\" \n                        name=\"price\" \n                        className={`${styles.input}`}/>\n                        {\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\n                        }\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                            Update\n                        </button>\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </Form>\n                    \n                    )}\n                    \n                </Formik>\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}