{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Applications\\\\my-barber\\\\src\\\\Components\\\\Product\\\\UpdateProduct\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [searchProduct, setSearchProduct] = useState('');\n  const [products, getProducts] = useState([]);\n  const [productId, setProductId] = useState('');\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  const addProductSchema = AddProductSchema;\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n  useEffect(() => {\n    myfunction();\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/getall');\n    getProducts(result.data);\n  };\n\n  const updateProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/updateproduct\", {\n      productName: productName.toLowerCase(),\n      price: productPrice,\n      productId: productId\n    });\n    window.alert(result.data.message);\n    myfunction();\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n\n    if (filteredProductArray.length === 0) {\n      setProductName('');\n      setProductPrice('');\n    } else {\n      // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n      // document.getElementById('price').value = filteredProductArray[0].price;\n      formik.initialValues.productName = filteredProductArray[0].productName.charAt(0).toUpperCase() + filteredProductArray[0].productName.slice(1);\n      formik.initialValues.price = filteredProductArray[0].price;\n      setProductName(filteredProductArray[0].productName);\n      setProductPrice(filteredProductArray[0].price);\n      setProductId(filteredProductArray[0].productId);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      productName: '',\n      price: ''\n    },\n    validationSchema: addProductSchema,\n    validateOnBlur: false,\n    validateOnMount: false,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        updateProduct();\n        formik.initialValues.productName = '';\n        formik.initialValues.price = '';\n        setProductName('');\n        setProductPrice('');\n        setProductId('');\n        setSubmitting(false);\n      }, 100);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(ProductFilter, {\n      filteredProduct: filteredProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            formik.values.productName = e.target.value;\n            setProductName(e.target.value);\n          },\n          name: \"productName\",\n          type: \"text\",\n          id: \"productname\",\n          value: formik.values.productName.charAt(0).toUpperCase() + formik.values.productName.slice(1),\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), formik.errors.productName && formik.touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: formik.errors.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 84\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            formik.values.price = e.target.value;\n            setProductPrice(e.target.value);\n          },\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          value: formik.values.price,\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), formik.errors.price && formik.touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: formik.errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 72\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: null,\n          disabled: formik.isSubmitting,\n          type: \"submit\",\n          className: `${styles.button}`,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancel(),\n          disabled: formik.isSubmitting,\n          type: \"submit\",\n          className: `${styles.button} ${styles.red}`,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"xJOJHuAshznaxQcdCk+SKFETDs4=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["F:/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js"],"names":["React","useState","useEffect","styles","Axios","Formik","Form","Field","ErrorMessage","useFormik","useHistory","AddProductSchema","ProductFilter","createRef","UpdateProduct","history","searchProduct","setSearchProduct","products","getProducts","productId","setProductId","productName","setProductName","productPrice","setProductPrice","addProductSchema","filteredProductArray","filter","product","includes","toLowerCase","myfunction","result","get","data","updateProduct","post","price","window","alert","message","cancel","push","filteredProduct","event","target","value","length","formik","initialValues","charAt","toUpperCase","slice","validationSchema","validateOnBlur","validateOnMount","onSubmit","values","setSubmitting","setTimeout","container","center","h1","handleSubmit","label","e","input","errors","touched","error","isSubmitting","button","red"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport styles from './UpdateProduct.module.css';\r\nimport Axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\r\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\r\nimport { createRef } from \"react\";\r\n\r\n\r\nconst UpdateProduct = () => {\r\n    const history = useHistory();\r\n    const [searchProduct, setSearchProduct] = useState('');\r\n    const [products, getProducts] = useState([]);\r\n    const [productId, setProductId] = useState('');\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState('');\r\n    const addProductSchema = AddProductSchema;\r\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        myfunction()\r\n    },[]);\r\n\r\n    const myfunction = async () => {\r\n        let result = await Axios.get('http://localhost:3001/api/getall')\r\n        getProducts(result.data);\r\n      }\r\n\r\n    const updateProduct = async () =>{\r\n         let result = await  Axios.post(\"http://localhost:3001/updateproduct\", {\r\n            productName: productName.toLowerCase(), \r\n            price: productPrice,\r\n            productId: productId,\r\n        })\r\n\r\n\r\n        window.alert(result.data.message)\r\n        myfunction()\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/dashboard');\r\n    }\r\n\r\n    \r\n\r\n    const filteredProduct = (event) => {\r\n        setSearchProduct(event.target.value);\r\n\r\n        if(filteredProductArray.length === 0){\r\n            setProductName('');\r\n            setProductPrice('');\r\n        }else{\r\n            // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\r\n            // document.getElementById('price').value = filteredProductArray[0].price;\r\n            formik.initialValues.productName = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\r\n            formik.initialValues.price = filteredProductArray[0].price;\r\n            setProductName(filteredProductArray[0].productName);\r\n            setProductPrice(filteredProductArray[0].price);\r\n            setProductId(filteredProductArray[0].productId);\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {productName: '', price: ''},\r\n        validationSchema: addProductSchema,\r\n        validateOnBlur:false,\r\n        validateOnMount:false,\r\n        onSubmit: (values, {setSubmitting}) => {\r\n            setTimeout(() => {\r\n                updateProduct()\r\n                formik.initialValues.productName = '';\r\n                formik.initialValues.price = '';\r\n                setProductName('');\r\n                setProductPrice('');\r\n                setProductId('');\r\n                setSubmitting(false);\r\n            }, 100);\r\n        },\r\n      });\r\n   \r\n\r\n    return(\r\n        <div className={`${styles.container}`}> \r\n            <ProductFilter filteredProduct={filteredProduct}/>\r\n            <div className={styles.center}>\r\n                <h1 className={styles.h1}>Update Product</h1>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <label className={styles.label}>Product Name</label>\r\n                        <input\r\n                        onChange={e =>{\r\n                            formik.values.productName = e.target.value\r\n                            setProductName(e.target.value)\r\n                        }}\r\n                        name=\"productName\"\r\n                        type=\"text\"\r\n                        id=\"productname\" \r\n                        value={formik.values.productName.charAt(0).toUpperCase()+formik.values.productName.slice(1)}\r\n                        className={`${styles.input}`}/>\r\n                        {\r\n                        formik.errors.productName && formik.touched.productName ? (<div className={styles.error}>{formik.errors.productName}</div>) : null\r\n                        }\r\n                         <label className={styles.label}>Product Price</label>\r\n                        <input\r\n                        onChange={e =>{\r\n                            formik.values.price = e.target.value\r\n                            setProductPrice(e.target.value)\r\n                        }}\r\n                        type=\"number\" \r\n                        name=\"price\" \r\n                        id=\"price\"\r\n                        value={formik.values.price}\r\n                        className={`${styles.input}`}/>\r\n                        {\r\n                        formik.errors.price && formik.touched.price ? (<div className={styles.error}>{formik.errors.price}</div>) : null\r\n                        }\r\n                        <button \r\n                            onSubmit={null}\r\n                            disabled={formik.isSubmitting} \r\n                            type=\"submit\"  \r\n                            className={`${styles.button}`}>\r\n                            Update\r\n                        </button>\r\n                        <button onClick={()=>cancel()} disabled={formik.isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\r\n                            Cancel\r\n                        </button>\r\n                    </form>\r\n                    \r\n                    \r\n                {/* </Formik> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}