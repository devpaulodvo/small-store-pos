{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [searchProduct, setSearchProduct] = useState('');\n  const [products, getProducts] = useState([]);\n  const [productId, setProductId] = useState('');\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  useEffect(() => {\n    myfunction(); // Axios.get('http://localhost:3001/api/get').then((response)=>{\n    //     getProducts(response.data);\n    // })\n    // return function cleanup() {\n    //   };\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/get');\n    getProducts(result.data);\n  };\n\n  const updateProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/api/update-product\", {\n      productName: productName,\n      price: productPrice,\n      productId: productId\n    });\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n\n    if (filteredProductArray.length === 0) {\n      setProductName('');\n      setProductPrice('');\n    } else {\n      console.log(filteredProductArray[0].productName.charAt(0).toUpperCase() + filteredProductArray[0].productName.slice(1)); // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n      // setProductName(filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1));\n      // setProductPrice(filteredProductArray[0].price);\n      // setProductId(filteredProductArray[0].productId);\n      // setFieldValue()\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      productName: '',\n      price: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(ProductFilter, {\n      filteredProduct: filteredProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          productName: '',\n          price: ''\n        },\n        validationSchema: AddProductSchema,\n        validateOnBlur: false,\n        validateOnMount: false,\n        validateOnChange: false,\n        enableReinitialize: true,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            updateProduct();\n            window.alert(\"Product Updated!\");\n            resetForm({\n              values: ''\n            });\n            setProductName('');\n            setProductPrice('');\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductName(event.target.value.toLowerCase());\n            },\n            name: \"productName\",\n            type: \"text\",\n            id: \"productname\" // value={productName}\n            ,\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 70\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductPrice(event.target.value);\n            },\n            type: \"text\",\n            name: \"price\",\n            id: \"price\" // value={productPrice}\n            ,\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 58\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancel(),\n            disabled: isSubmitting,\n            type: \"submit\",\n            className: `${styles.button} ${styles.red}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"xJOJHuAshznaxQcdCk+SKFETDs4=\", true, function () {\n  return [useHistory];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js"],"names":["React","useState","useEffect","styles","Axios","Formik","Form","Field","ErrorMessage","useHistory","AddProductSchema","ProductFilter","createRef","UpdateProduct","history","searchProduct","setSearchProduct","products","getProducts","productId","setProductId","productName","setProductName","productPrice","setProductPrice","myfunction","result","get","data","updateProduct","post","price","cancel","push","filteredProductArray","filter","product","includes","toLowerCase","filteredProduct","event","target","value","length","console","log","charAt","toUpperCase","slice","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","container","center","h1","setSubmitting","resetForm","setTimeout","window","isSubmitting","errors","touched","handleSubmit","label","input","error","button","red"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom'; \nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\n\n\nconst UpdateProduct = () => {\n    const history = useHistory();\n    const [searchProduct, setSearchProduct] = useState('');\n    const [products, getProducts] = useState([]);\n    const [productId, setProductId] = useState('');\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    useEffect(()=>{\n        myfunction()\n        // Axios.get('http://localhost:3001/api/get').then((response)=>{\n        //     getProducts(response.data);\n        // })\n        // return function cleanup() {\n        //   };\n    },[]);\n\n    const myfunction = async () => {\n        let result = await Axios.get('http://localhost:3001/api/get')\n        getProducts(result.data);\n      }\n\n    const updateProduct = async () =>{\n         let result = await  Axios.post(\"http://localhost:3001/api/update-product\", {\n            productName: productName, \n            price: productPrice,\n            productId: productId,\n        })\n    }\n\n    const cancel = () => {\n        history.push('/dashboard');\n    }\n\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n    const filteredProduct = (event) => {\n        setSearchProduct(event.target.value);\n\n        if(filteredProductArray.length === 0){\n            setProductName('');\n            setProductPrice('');\n        }else{\n            console.log(filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1))\n            // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n            // setProductName(filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1));\n            // setProductPrice(filteredProductArray[0].price);\n            // setProductId(filteredProductArray[0].productId);\n            // setFieldValue()\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: { productName: '', price: ''},\n        onSubmit: values => {\n          alert(JSON.stringify(values, null, 2));\n        },\n      });\n\n    return(\n        <div className={`${styles.container}`}> \n            <ProductFilter filteredProduct={filteredProduct}/>\n            <div className={styles.center}>\n                <input />\n                <h1 className={styles.h1}>Update Product</h1>\n                <Formik\n                    initialValues={{ productName: '', price: ''}}\n                    validationSchema={AddProductSchema}\n                    validateOnBlur={false}\n                    validateOnMount={false}\n                    validateOnChange={false}\n                    enableReinitialize={true}\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\n                        \n                        setTimeout(() => {\n                            updateProduct()\n                             window.alert(\"Product Updated!\")\n                            resetForm({values: ''});\n                            setProductName('');\n                            setProductPrice('');\n                            setSubmitting(false);\n                        }, 100);\n                    }}\n                >\n                    {({isSubmitting, errors, touched})=>(\n                    <form onSubmit={formik.handleSubmit}>\n                        <label className={styles.label}>Product Name</label>\n                        <Field \n                        onKeyUp={(event) => {setProductName(event.target.value.toLowerCase())}} \n                        name=\"productName\"\n                        type=\"text\"\n                        id=\"productname\" \n                        // value={productName}\n                        className={`${styles.input}`}/>\n                        {\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <Field \n                        onKeyUp={(event) => {setProductPrice(event.target.value)}} \n                        type=\"text\" \n                        name=\"price\" \n                        id=\"price\"\n                        // value={productPrice}\n                        className={`${styles.input}`}/>\n                        {\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\n                        }\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                            Update\n                        </button>\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </form>\n                    \n                    )}\n                    \n                </Formik>\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}