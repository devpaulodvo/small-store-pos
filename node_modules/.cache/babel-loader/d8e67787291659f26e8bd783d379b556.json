{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport { RegisterSchema } from \"../../Schemas/Schema\";\nimport styles from './Register.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [username1, setUsername] = useState('');\n  const [password1, setPassword] = useState('');\n  const [cpassword1, setCPassword] = useState('');\n\n  const sendPostRequest = async () => {\n    try {\n      let result = await Axios.post(\"http://localhost:3001/register\", {\n        username: username1,\n        password: password1\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        password: '',\n        cpassword: ''\n      },\n      validationSchema: RegisterSchema,\n      validateOnBlur: false,\n      validateOnChange: false,\n      handleBlur: async (values, actions) => {\n        actions.setStatus(undefined);\n        actions.setStatus({\n          username: ''\n        });\n        console.log('T');\n      },\n      onSubmit: async (values, actions, setSubmitting, resetForm) => {\n        actions.setStatus(undefined);\n        let result = await Axios.post(\"http://localhost:3001/checkusername\", {\n          username: username1,\n          password: password1\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (result.data.username === username1) {\n          setTimeout(() => {\n            actions.setStatus({\n              username: result.data.username\n            });\n          }, 100);\n        } else {\n          setTimeout(() => {\n            sendPostRequest();\n            setPassword('');\n            setUsername('');\n            resetForm({\n              values: ''\n            });\n            setSubmitting(false);\n          }, 100);\n        }\n      },\n      children: ({\n        isSubmitting,\n        errors,\n        touched,\n        status\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setUsername(event.target.value);\n          },\n          type: \"text\",\n          name: \"username\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), () => {\n          if (errors.username && touched.username) {\n            console.log('A');\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 40\n            }, this);\n          } else if (status && status.username) {\n            console.log('B');\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [status.username, \" is not available\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 40\n            }, this);\n          }\n        }, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"password\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 61\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setCPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"cpassword\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), errors.cpassword && touched.cpassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.cpassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 63\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: null,\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: `${styles.button}`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"SRdkX483/SxEUkKqNIqpQf+tHsw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","RegisterSchema","styles","Register","props","username1","setUsername","password1","setPassword","cpassword1","setCPassword","sendPostRequest","result","post","username","password","headers","err","console","log","div","textAlign","cpassword","values","actions","setStatus","undefined","setSubmitting","resetForm","data","setTimeout","isSubmitting","errors","touched","status","form","label","event","target","value","input","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport {RegisterSchema} from \"../../Schemas/Schema\";\n\n\nimport styles from './Register.module.css';\n\nconst Register = (props) => {\n    \n    const [username1, setUsername] = useState('');\n    const [password1, setPassword] = useState('');\n    const [cpassword1, setCPassword] = useState('');\n\n    \n\n    const sendPostRequest = async () => {\n        try{\n        let result = await Axios.post(\"http://localhost:3001/register\", {\n        username: username1,\n        password: password1\n        }, {\n            headers: {'Content-Type': 'application/json'}\n        });\n        }catch(err){\n            console.log(err);\n        }\n    };\n\n    return(\n        <div className={styles.div}>\n            <h4 style={{textAlign: 'center'}}>Register</h4>\n            <Formik\n                initialValues={{ username: '', password: '', cpassword:'' }}\n                validationSchema={RegisterSchema}\n                validateOnBlur={false}\n                validateOnChange={false}\n                handleBlur={async (values, actions)=>{\n                    actions.setStatus(undefined)\n                    actions.setStatus({username: ''})\n                    console.log('T')\n                }}\n                onSubmit={async (values, actions, setSubmitting, resetForm) => {\n                    actions.setStatus(undefined)\n                    let result = await Axios.post(\"http://localhost:3001/checkusername\", {\n                        username: username1,\n                        password: password1\n                    }, {headers: {'Content-Type': 'application/json'}})\n                \n                    if(result.data.username === username1){\n                        setTimeout(() => {\n                        actions.setStatus({username: result.data.username})\n                        }, 100)\n                    }else{\n                        setTimeout(() => {\n                            sendPostRequest()\n                            setPassword('');\n                            setUsername('');\n                            resetForm({values: ''});\n                            setSubmitting(false);\n                        }, 100);\n                    }\n                    \n                }}\n                >\n                {({ isSubmitting, errors, touched, status }) => (\n                    <Form className={styles.form}>\n                        <label className={`${styles.label}`}>Username</label>\n                    <Field onKeyUp={(event) => {setUsername(event.target.value)}} type=\"text\" name=\"username\" className={`${styles.input}`}/>\n                    {\n                        (()=>{\n                            if(errors.username && touched.username){\n                                console.log('A')\n                                return(<div>{errors.username}</div>) \n                            }else if(status && status.username){\n                                console.log('B')\n                                return <div>{status.username} is not available</div>\n                            }\n                        })\n                     \n                    }\n                    <label className={`${styles.label}`}>Password</label>\n                    <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\n                    {\n                     errors.password && touched.password ? (<div>{errors.password}</div>) : null\n                    }\n                    <label className={`${styles.label}`}>Confirm Password</label>\n                    <Field onKeyUp={(event) => {setCPassword(event.target.value)}} type=\"password\" name=\"cpassword\" className={`${styles.input}`}/>\n                    {\n                     errors.cpassword && touched.cpassword ? (<div>{errors.cpassword}</div>) : null\n                    }\n                    <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                        Submit\n                    </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}