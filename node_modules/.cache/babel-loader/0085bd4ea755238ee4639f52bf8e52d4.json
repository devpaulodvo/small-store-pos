{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport { LoginSchema } from \"../../Schemas/Schema\";\nimport styles from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState(false); // const sendGetRequest = async () =>{\n  //     try {\n  //         const resp = await Axios.post(\"http://localhost:3001/login\", {\n  //             username: username,\n  //             password: password\n  //         });\n  //         console.log(resp.data);\n  //     } catch (err) {\n  //         // Handle Error Here\n  //         console.error(err);\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Welcome to Verna Store. Please Login.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      validationSchema: LoginSchema,\n      validateOnBlur: false,\n      validateOnChange: false,\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        if (values) {\n          setTimeout(async () => {\n            let result = await Axios.post(\"http://localhost:3001/login\", {\n              username: username,\n              password: password\n            }, {\n              withCredentials: true\n            });\n            console.log(result); // sendGetRequest()\n\n            setSubmitting(false);\n          }, 100);\n        } else {\n          setTimeout(async () => {\n            let result = await Axios.post(\"http://localhost:3001/profile\");\n            console.log(result); // sendGetRequest()\n\n            setSubmitting(false);\n          }, 100);\n        }\n      },\n      children: ({\n        isSubmitting,\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setUsername(event.target.value);\n          },\n          type: \"text\",\n          name: \"username\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 61\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"password\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 61\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: true,\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: `${styles.button}`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: false,\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: `${styles.button}`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"+ZnEvzSJz8P9kHYWr6n/je8vI8Y=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Login/Login.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","LoginSchema","styles","Login","props","username","setUsername","password","setPassword","loginStatus","setLoginStatus","div","textAlign","values","setSubmitting","resetForm","setTimeout","result","post","withCredentials","console","log","isSubmitting","errors","touched","form","label","event","target","value","input","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAU;AAAA;;AAEpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C,CALoB,CAOpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEO,MAAM,CAACS,GAAvB;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACC,MAAA,aAAa,EAAE;AAAEP,QAAAA,QAAQ,EAAE,EAAZ;AAAgBE,QAAAA,QAAQ,EAAE;AAA1B,OADhB;AAEC,MAAA,gBAAgB,EAAEN,WAFnB;AAGC,MAAA,cAAc,EAAE,KAHjB;AAIC,MAAA,gBAAgB,EAAE,KAJnB;AAKC,MAAA,QAAQ,EAAE,CAACY,MAAD,EAAS;AAACC,QAAAA,aAAD;AAAgBC,QAAAA;AAAhB,OAAT,KAAwC;AAC9C,YAAGF,MAAH,EAAU;AACPG,UAAAA,UAAU,CAAC,YAAY;AACnB,gBAAIC,MAAM,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,6BAAX,EAA0C;AACzDb,cAAAA,QAAQ,EAAEA,QAD+C;AAEzDE,cAAAA,QAAQ,EAAEA;AAF+C,aAA1C,EAGhB;AAACY,cAAAA,eAAe,EAAE;AAAlB,aAHgB,CAAnB;AAIAC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EALmB,CAMnB;;AACJH,YAAAA,aAAa,CAAC,KAAD,CAAb;AACC,WARS,EAQP,GARO,CAAV;AASF,SAVD,MAUK;AACFE,UAAAA,UAAU,CAAC,YAAY;AACnB,gBAAIC,MAAM,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,+BAAX,CAAnB;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAFmB,CAGnB;;AACJH,YAAAA,aAAa,CAAC,KAAD,CAAb;AACC,WALS,EAKP,GALO,CAAV;AAMF;AAEL,OAzBD;AAAA,gBA2BC,CAAC;AAACQ,QAAAA,YAAD;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,OAAD,kBACG,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEtB,MAAM,CAACuB,IAAxB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAG,GAAEvB,MAAM,CAACwB,KAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAGC,KAAD,IAAW;AAACrB,YAAAA,WAAW,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AAAgC,WAA5D;AAA8D,UAAA,IAAI,EAAC,MAAnE;AAA0E,UAAA,IAAI,EAAC,UAA/E;AAA0F,UAAA,SAAS,EAAG,GAAE3B,MAAM,CAAC4B,KAAM;AAArH;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIKP,MAAM,CAAClB,QAAP,IAAmBmB,OAAO,CAACnB,QAA3B,gBAAuC;AAAA,oBAAMkB,MAAM,CAAClB;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAvC,GAAuE,IAJ5E,eAMI;AAAO,UAAA,SAAS,EAAG,GAAEH,MAAM,CAACwB,KAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAGC,KAAD,IAAW;AAACnB,YAAAA,WAAW,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AAAgC,WAA5D;AAA8D,UAAA,IAAI,EAAC,UAAnE;AAA8E,UAAA,IAAI,EAAC,UAAnF;AAA8F,UAAA,SAAS,EAAG,GAAE3B,MAAM,CAAC4B,KAAM;AAAzH;AAAA;AAAA;AAAA;AAAA,gBAPJ,EASKP,MAAM,CAAChB,QAAP,IAAmBiB,OAAO,CAACjB,QAA3B,gBAAuC;AAAA,oBAAMgB,MAAM,CAAChB;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAvC,GAAuE,IAT5E,eAWI;AAAQ,UAAA,QAAQ,EAAE,IAAlB;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAsC,UAAA,QAAQ,EAAEe,YAAhD;AAA8D,UAAA,SAAS,EAAG,GAAEpB,MAAM,CAAC6B,MAAO,EAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAcI;AAAQ,UAAA,QAAQ,EAAE,KAAlB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAET,YAAjD;AAA+D,UAAA,SAAS,EAAG,GAAEpB,MAAM,CAAC6B,MAAO,EAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsDH,CA1ED;;GAAM5B,K;;KAAAA,K;AA4EN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\n\nimport { LoginSchema } from \"../../Schemas/Schema\";\nimport styles from './Login.module.css';\n\n\nconst Login = (props) =>{\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [loginStatus, setLoginStatus] = useState(false);\n\n    // const sendGetRequest = async () =>{\n    //     try {\n    //         const resp = await Axios.post(\"http://localhost:3001/login\", {\n    //             username: username,\n    //             password: password\n    //         });\n    //         console.log(resp.data);\n    //     } catch (err) {\n    //         // Handle Error Here\n    //         console.error(err);\n    //     }\n    // };\n\n    return(\n        <div className={styles.div}>\n            <h4 style={{textAlign: 'center'}}>Welcome to Verna Store. Please Login.</h4>\n            <Formik\n             initialValues={{ username: '', password: ''}}\n             validationSchema={LoginSchema}\n             validateOnBlur={false}\n             validateOnChange={false}\n             onSubmit={(values, {setSubmitting, resetForm}) => {\n                 if(values){\n                    setTimeout(async () => {\n                        let result = await Axios.post(\"http://localhost:3001/login\", {\n                            username: username,\n                            password: password\n                        }, {withCredentials: true});\n                        console.log(result)\n                        // sendGetRequest()\n                    setSubmitting(false);\n                    }, 100);\n                 }else{\n                    setTimeout(async () => {\n                        let result = await Axios.post(\"http://localhost:3001/profile\");\n                        console.log(result)\n                        // sendGetRequest()\n                    setSubmitting(false);\n                    }, 100);\n                 }\n                \n            }}\n            >\n            {({isSubmitting, errors, touched})=>(\n                <Form className={styles.form}>\n                    <label className={`${styles.label}`}>Username</label>\n                    <Field onKeyUp={(event) => {setUsername(event.target.value)}} type=\"text\" name=\"username\" className={`${styles.input}`}/>\n                    {\n                     errors.username && touched.username ? (<div>{errors.username}</div>) : null\n                    }\n                    <label className={`${styles.label}`}>Password</label>\n                    <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\n                    {\n                     errors.password && touched.password ? (<div>{errors.password}</div>) : null\n                    }\n                    <button onSubmit={true} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                        Submit\n                    </button>\n                    <button onSubmit={false} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                        Submit\n                    </button>\n                </Form>\n            )}\n            </Formik>\n        </div>\n    );\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}