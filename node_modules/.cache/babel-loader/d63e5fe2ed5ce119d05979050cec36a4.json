{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport styles from './NewProduct.module.css';\nimport ManageProductMenu from \"../ManageProductMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  const addProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/api/insert\", {\n      productName: productName.toLowerCase(),\n      price: productPrice\n    }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ManageProductMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.container}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.center,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.h1,\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            productName: '',\n            price: ''\n          },\n          validationSchema: AddProductSchema,\n          validateOnBlur: false,\n          validateOnChange: false,\n          onSubmit: (values, {\n            setSubmitting,\n            resetForm\n          }) => {\n            setTimeout(() => {\n              addProduct();\n              window.alert(\"Product Added!\");\n              resetForm({\n                values: ''\n              });\n              setProductName('');\n              setProductPrice('');\n              setSubmitting(false);\n            }, 100);\n          },\n          children: ({\n            isSubmitting,\n            errors,\n            touched\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              onKeyUp: event => {\n                setProductName(event.target.value);\n              },\n              type: \"text\",\n              name: \"productName\",\n              className: `${styles.input}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.error,\n              children: errors.productName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 70\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              children: \"Product Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              onKeyUp: event => {\n                setProductPrice(event.target.value);\n              },\n              type: \"number\",\n              name: \"price\",\n              className: `${styles.input}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.error,\n              children: errors.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 58\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              onSubmit: null,\n              type: \"submit\",\n              disabled: isSubmitting,\n              className: `${styles.button}`,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => cancel(),\n              disabled: isSubmitting,\n              type: \"submit\",\n              className: `${styles.button} ${styles.red}`,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewProduct, \"pZv6B9UB1Fq5Svdu1YB3J9aOuSI=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProduct;\nexport default NewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js"],"names":["React","useState","Axios","Formik","Form","Field","ErrorMessage","useHistory","AddProductSchema","styles","ManageProductMenu","NewProduct","history","productName","setProductName","productPrice","setProductPrice","addProduct","result","post","toLowerCase","price","headers","localStorage","getItem","cancel","push","container","center","h1","values","setSubmitting","resetForm","setTimeout","window","alert","isSubmitting","errors","touched","label","event","target","value","input","error","button","red"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom'; \nimport { AddProductSchema } from \"../../../Schemas/Schema\";\n\nimport styles from './NewProduct.module.css';\nimport ManageProductMenu from \"../ManageProductMenu\";\n\nconst NewProduct = () =>{\n    const history = useHistory();\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    const addProduct = async () =>{\n         let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\n            productName: productName.toLowerCase(),\n            price: productPrice\n        },{headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\n    }\n\n    const cancel = () => {\n        history.push('/dashboard');\n    }\n\n    return( \n        <React.Fragment>\n        <ManageProductMenu/>\n        <div className={`${styles.container}`}> \n            <div className={styles.center}>\n                <h1 className={styles.h1}>Add Product</h1>\n                <Formik\n                    initialValues={{ productName: '', price: ''}}\n                    validationSchema={AddProductSchema}\n                    validateOnBlur={false}\n                    validateOnChange={false}\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\n                        setTimeout(() => {\n                            addProduct()\n                             window.alert(\"Product Added!\")\n                            resetForm({values: ''});\n                            setProductName('');\n                            setProductPrice('');\n                            setSubmitting(false);\n                        }, 100);\n                    }}\n                >\n                    {({isSubmitting, errors, touched})=>(\n                    <Form>\n                        <label className={styles.label}>Product Name</label>\n                        <Field onKeyUp={(event) => {setProductName(event.target.value)}} type=\"text\" name=\"productName\" className={`${styles.input}`}/>\n                        {\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <Field onKeyUp={(event) => {setProductPrice(event.target.value)}} type=\"number\" name=\"price\" className={`${styles.input}`}/>\n                        {\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\n                        }\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                            Submit\n                        </button>\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </Form>\n                    \n                    )}\n                    \n                </Formik>\n                \n            </div>\n        </div>\n        </React.Fragment>\n    )\n}\n\nexport default NewProduct;"]},"metadata":{},"sourceType":"module"}