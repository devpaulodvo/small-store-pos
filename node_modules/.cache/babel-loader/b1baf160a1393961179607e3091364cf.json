{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Applications\\\\my-barber\\\\src\\\\Components\\\\Product\\\\NewProduct\\\\NewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup'; // import { AddProductSchema } from \"../../../Schemas/Schema\";\n\nimport styles from './NewProduct.module.css';\nimport ManageProductMenu from \"../ManageProductMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  let addProductSchema = Yup.object().shape({\n    productName: Yup.string().min(5, \"Product Name must be 5 characters long\").required('Required Product Name').test(\"is_exists\", \"Not Available\", value => {\n      return new Promise((resolve, reject) => {\n        setTimeout(async () => {\n          try {\n            let result = await Axios.post(\"http://localhost:3001/checkproduct\", {\n              productName: productName,\n              price: productPrice\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n            if (value === result.data.username) {\n              resolve(false);\n            } else {\n              resolve(true);\n            }\n          } catch (err) {\n            console.log(err);\n          }\n        }, 500);\n      });\n    })\n  });\n\n  const addProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/api/insert\", {\n      productName: productName.toLowerCase(),\n      price: productPrice\n    }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    window.alert(\"Product Already Exists!\");\n\n    if (result == 0) {\n      window.alert(\"Product Already Exists!\");\n    } else {\n      window.alert(\"Product Added!\");\n    }\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          productName: '',\n          price: ''\n        },\n        validationSchema: AddProductSchema,\n        validateOnBlur: false,\n        validateOnChange: false,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            addProduct();\n            resetForm({\n              values: ''\n            });\n            setProductName('');\n            setProductPrice('');\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductName(event.target.value);\n            },\n            type: \"text\",\n            name: \"productName\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 70\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductPrice(event.target.value);\n            },\n            type: \"number\",\n            name: \"price\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 58\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancel(),\n            disabled: isSubmitting,\n            type: \"submit\",\n            className: `${styles.button} ${styles.red}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewProduct, \"pZv6B9UB1Fq5Svdu1YB3J9aOuSI=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProduct;\nexport default NewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"sources":["F:/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js"],"names":["React","useState","Axios","Formik","Form","Field","ErrorMessage","useHistory","Yup","styles","ManageProductMenu","NewProduct","history","productName","setProductName","productPrice","setProductPrice","addProductSchema","object","shape","string","min","required","test","value","Promise","resolve","reject","setTimeout","result","post","price","headers","data","username","err","console","log","addProduct","toLowerCase","localStorage","getItem","window","alert","cancel","push","container","center","h1","AddProductSchema","values","setSubmitting","resetForm","isSubmitting","errors","touched","label","event","target","input","error","button","red"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport * as Yup from 'yup';\r\n// import { AddProductSchema } from \"../../../Schemas/Schema\";\r\n\r\nimport styles from './NewProduct.module.css';\r\nimport ManageProductMenu from \"../ManageProductMenu\";\r\n\r\nconst NewProduct = () =>{\r\n    const history = useHistory();\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState('');\r\n\r\n    let addProductSchema = Yup.object().shape({\r\n        productName: Yup.string().min(5, \"Product Name must be 5 characters long\").required('Required Product Name')\r\n        .test(\"is_exists\", \"Not Available\", (value)=>{\r\n            return new Promise((resolve, reject)=>{\r\n               setTimeout(async()=>{\r\n                try{\r\n                    let result = await Axios.post(\"http://localhost:3001/checkproduct\", {\r\n                        productName: productName,\r\n                        price: productPrice\r\n                    }, {headers: {'Content-Type': 'application/json'}})\r\n                   if(value === result.data.username){\r\n                        resolve(false)\r\n                    }else{\r\n                        resolve(true)\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n               }, 500)\r\n               \r\n            })\r\n        })\r\n    })\r\n\r\n    const addProduct = async () =>{\r\n         let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\r\n            productName: productName.toLowerCase(),\r\n            price: productPrice\r\n        },{headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\r\n\r\n        window.alert(\"Product Already Exists!\")\r\n        if(result == 0){\r\n            window.alert(\"Product Already Exists!\")\r\n        }\r\n        else{  \r\n            window.alert(\"Product Added!\")\r\n        }\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/dashboard');\r\n    }\r\n\r\n    return( \r\n        <div className={`${styles.container}`}>\r\n            <div className={styles.center}>\r\n                <h1 className={styles.h1}>Add Product</h1>\r\n                <Formik\r\n                    initialValues={{ productName: '', price: ''}}\r\n                    validationSchema={AddProductSchema}\r\n                    validateOnBlur={false}\r\n                    validateOnChange={false}\r\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                        setTimeout(() => {\r\n                            addProduct()\r\n                            resetForm({values: ''});\r\n                            setProductName('');\r\n                            setProductPrice('');\r\n                            setSubmitting(false);\r\n                        }, 100);\r\n                    }}\r\n                >\r\n                    {({isSubmitting, errors, touched})=>(\r\n                    <Form>\r\n                        <label className={styles.label}>Product Name</label>\r\n                        <Field onKeyUp={(event) => {setProductName(event.target.value)}} type=\"text\" name=\"productName\" className={`${styles.input}`}/>\r\n                        {\r\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\r\n                        }\r\n                         <label className={styles.label}>Product Price</label>\r\n                        <Field onKeyUp={(event) => {setProductPrice(event.target.value)}} type=\"number\" name=\"price\" className={`${styles.input}`}/>\r\n                        {\r\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\r\n                        }\r\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\r\n                            Submit\r\n                        </button>\r\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\r\n                            Cancel\r\n                        </button>\r\n                    </Form>\r\n                    \r\n                    )}\r\n                    \r\n                </Formik>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProduct;"]},"metadata":{},"sourceType":"module"}