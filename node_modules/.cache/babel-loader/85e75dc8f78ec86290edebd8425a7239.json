{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport styles from './Register.module.css';\nimport TextField from \"../../UI/TextField/TextField\";\nimport Button from \"../../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpassword, setCPassword] = useState('');\n\n  const sendPostRequest = async () => {\n    console.log(username);\n    console.log(password);\n    console.log(cpassword); // try {\n    //     const resp = await Axios.post(\"http://localhost:3001/register\", {\n    //         username: username,\n    //         password: password,\n    //     });\n    //     console.log(resp.data);\n    // } catch (err) {\n    //     // Handle Error Here\n    //     console.error(err);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        cpassword: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        if (!values.password) {\n          errors.password = 'Required';\n        }\n\n        if (values.cpassword !== values.password) {\n          errors.cpassword = 'Password and Confirm Password did not match';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(\"Registered\"));\n          sendPostRequest();\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setUsername(event.target.value);\n          },\n          type: \"email\",\n          name: \"email\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"password\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setCPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"cpassword\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"cpassword\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: sendPostRequest,\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: `${styles.button}`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"s8p03RMVUu3UWzBp+obFhO4LKvo=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","styles","TextField","Button","Register","props","username","setUsername","password","setPassword","cpassword","setCPassword","sendPostRequest","console","log","div","textAlign","email","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","form","label","event","target","value","input","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\n\nimport styles from './Register.module.css';\nimport TextField from \"../../UI/TextField/TextField\";\nimport Button from \"../../UI/Button/Button\";\n\nconst Register = (props) => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [cpassword, setCPassword] = useState(''); \n\n    const sendPostRequest = async () => {\n        console.log(username);\n        console.log(password);\n        console.log(cpassword);\n        // try {\n        //     const resp = await Axios.post(\"http://localhost:3001/register\", {\n        //         username: username,\n        //         password: password,\n        //     });\n        //     console.log(resp.data);\n        // } catch (err) {\n        //     // Handle Error Here\n        //     console.error(err);\n        // }\n    };\n\n    return(\n        <div className={styles.div}>\n            <h4 style={{textAlign: 'center'}}>Register</h4>\n            {/* <form className={styles.form}> */}\n                {/* <TextField onChange={(event) => {setUsername(event.target.value)}} label=\"Username\" type=\"input\"/>\n                <TextField onChange={(event) => {setPassword(event.target.value)}} label=\"Password\" type=\"password\"/>\n                <TextField onChange={(event) => {setCPassword(event.target.value)}} label=\"Confirm Password\" type=\"password\"/>\n                <Button onClick={sendPostRequest} blue>Register</Button> */}\n                {/* <Button>Register</Button> */}\n            {/* </form> */}\n            <Formik\n                initialValues={{ email: '', password: '', cpassword:'' }}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email) {\n                    errors.email = 'Required';\n                    } else if (\n                    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                    errors.email = 'Invalid email address';\n                    }\n                    if(!values.password){\n                        errors.password = 'Required';\n                    }\n                    if(values.cpassword !== values.password){\n                        errors.cpassword = 'Password and Confirm Password did not match';\n                    }\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n                    alert(JSON.stringify(\"Registered\"));\n                    sendPostRequest();\n                    setSubmitting(false);\n                    }, 400);\n                }}\n                >\n                {({ isSubmitting }) => (\n                    <Form className={styles.form}>\n                        <label className={`${styles.label}`}>Username</label>\n                    <Field onKeyUp={(event) => {setUsername(event.target.value)}} type=\"email\" name=\"email\" className={`${styles.input}`}/>\n                    <ErrorMessage name=\"email\" component=\"div\" />\n                    <label className={`${styles.label}`}>Password</label>\n                    <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\n                    <ErrorMessage name=\"password\" component=\"div\" />\n                    <label className={`${styles.label}`}>Confirm Password</label>\n                    <Field onKeyUp={(event) => {setCPassword(event.target.value)}} type=\"password\" name=\"cpassword\" className={`${styles.input}`}/>\n                    <ErrorMessage name=\"cpassword\" component=\"div\" />\n                    <button onSubmit={sendPostRequest} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                        Submit\n                    </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}