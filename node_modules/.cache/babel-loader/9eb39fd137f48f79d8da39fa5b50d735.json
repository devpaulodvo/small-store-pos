{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Applications\\\\my-barber\\\\src\\\\Components\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport * as Yup from 'yup';\nimport styles from './Register.module.css';\nimport Header from \"../Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [middlename, setMiddlename] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [cpassword1, setCPassword] = useState('');\n  let registerSchema = Yup.object().shape({\n    username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username').test(\"is_exists\", \"Not Available\", value => {\n      return new Promise((resolve, reject) => {\n        setTimeout(async () => {\n          try {\n            let result = await Axios.post(\"http://localhost:3001/checkusername\", {\n              username: username,\n              password: password\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n            if (value === result.data.username) {\n              resolve(false);\n            } else {\n              resolve(true);\n            }\n          } catch (err) {\n            console.log(err);\n          }\n        }, 500);\n      });\n    }),\n    password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\n    cpassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password'),\n    firstname: Yup.string().required('Required Firstname'),\n    middlename: Yup.string().required('Required Middlename'),\n    lastname: Yup.string().required('Required Lastname')\n  });\n\n  const sendPostRequest = async () => {\n    try {\n      let result = await Axios.post(\"http://localhost:3001/register\", {\n        username: username,\n        password: password,\n        fn: firstname,\n        mn: middlename,\n        ln: lastname\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: '',\n          cpassword: '',\n          firstname: '',\n          middlename: '',\n          lastname: ''\n        },\n        validationSchema: registerSchema,\n        onSubmit: async (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            sendPostRequest();\n            window.alert(\"Client Registered\");\n            resetForm({\n              values: ''\n            });\n            setPassword('');\n            setUsername('');\n            setFirstname('');\n            setMiddlename('');\n            setLastname('');\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched,\n          status\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setFirstname(event.target.value);\n            },\n            type: \"text\",\n            name: \"firstname\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), errors.firstname && touched.firstname ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 66\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Middlename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setMiddlename(event.target.value);\n            },\n            type: \"text\",\n            name: \"middlename\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), errors.middlename && touched.middlename ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.middlename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 68\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setLastname(event.target.value);\n            },\n            type: \"text\",\n            name: \"lastname\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), errors.lastname && touched.lastname ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 64\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setUsername(event.target.value);\n            },\n            type: \"text\",\n            name: \"username\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 64\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setPassword(event.target.value);\n            },\n            type: \"password\",\n            name: \"password\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 64\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setCPassword(event.target.value);\n            },\n            type: \"password\",\n            name: \"cpassword\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), errors.cpassword && touched.cpassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.cpassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 66\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"TqBXtPxdPuT9i7BH47r4u10Dnl8=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["F:/React Applications/my-barber/src/Components/Register/Register.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","Yup","styles","Header","Register","props","username","setUsername","password","setPassword","firstname","setFirstname","middlename","setMiddlename","lastname","setLastname","cpassword1","setCPassword","registerSchema","object","shape","string","min","required","test","value","Promise","resolve","reject","setTimeout","result","post","headers","data","err","console","log","cpassword","oneOf","ref","sendPostRequest","fn","mn","ln","div","textAlign","values","setSubmitting","resetForm","window","alert","isSubmitting","errors","touched","status","form","label","event","target","input","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Axios from \"axios\";\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport styles from './Register.module.css';\r\nimport Header from \"../Header/Header\";\r\n\r\nconst Register = (props) => {\r\n    \r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstname, setFirstname] = useState('');\r\n    const [middlename, setMiddlename] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [cpassword1, setCPassword] = useState('');\r\n\r\n    let registerSchema = Yup.object().shape({\r\n        username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username')\r\n        .test(\"is_exists\", \"Not Available\", (value)=>{\r\n            return new Promise((resolve, reject)=>{\r\n               setTimeout(async()=>{\r\n                try{\r\n                    let result = await Axios.post(\"http://localhost:3001/checkusername\", {\r\n                        username: username,\r\n                        password: password\r\n                    }, {headers: {'Content-Type': 'application/json'}})\r\n                   if(value === result.data.username){\r\n                        resolve(false)\r\n                    }else{\r\n                        resolve(true)\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n               }, 500)\r\n               \r\n            })\r\n        })\r\n        ,\r\n        password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\r\n        cpassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password'),\r\n        firstname: Yup.string().required('Required Firstname'),\r\n        middlename: Yup.string().required('Required Middlename'),\r\n        lastname: Yup.string().required('Required Lastname')\r\n    });\r\n\r\n    const sendPostRequest = async () => {\r\n        try{\r\n        let result = await Axios.post(\"http://localhost:3001/register\", {\r\n        username: username,\r\n        password: password,\r\n        fn: firstname,\r\n        mn: middlename,\r\n        ln: lastname,\r\n        }, {\r\n            headers: {'Content-Type': 'application/json'}\r\n        });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <Header/>\r\n        <div className={styles.div}>\r\n            <h4 style={{textAlign: 'center'}}>Register</h4>\r\n            <Formik\r\n                initialValues={{ username: '', password: '', cpassword:'', firstname: '', middlename: '', lastname:'' }}\r\n                validationSchema={registerSchema}\r\n                onSubmit={async (values, {setSubmitting, resetForm }) => {\r\n                        setTimeout(() => {\r\n                            sendPostRequest()\r\n                            window.alert(\"Client Registered\")\r\n                            resetForm({values: ''});\r\n                            setPassword('');\r\n                            setUsername('');\r\n                            setFirstname('');\r\n                            setMiddlename('');\r\n                            setLastname('');\r\n                            setSubmitting(false);\r\n                        }, 100);\r\n                }}\r\n                >\r\n                {({ isSubmitting, errors, touched, status }) => (\r\n                    <Form className={styles.form}>\r\n                        <label className={`${styles.label}`}>Firstname</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setFirstname(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"firstname\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.firstname && touched.firstname ? (<div>{errors.firstname}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Middlename</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setMiddlename(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"middlename\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.middlename && touched.middlename ? (<div>{errors.middlename}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Lastname</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setLastname(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"lastname\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.lastname && touched.lastname ? (<div>{errors.lastname}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Username</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setUsername(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"username\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.username && touched.username ? (<div>{errors.username}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Password</label>\r\n                        <Field \r\n                            onKeyUp={(event) => {setPassword(event.target.value)}} \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            className={`${styles.input}`}/>\r\n                        {\r\n                        errors.password && touched.password ? (<div>{errors.password}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Confirm Password</label>\r\n                        <Field \r\n                            onKeyUp={(event) => {setCPassword(event.target.value)}} \r\n                            type=\"password\" \r\n                            name=\"cpassword\" \r\n                            className={`${styles.input}`}/>\r\n                        {\r\n                        errors.cpassword && touched.cpassword ? (<div>{errors.cpassword}</div>) : null\r\n                        }\r\n                        \r\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\r\n                            Submit\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}