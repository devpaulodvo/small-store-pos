{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const cartSlice = createSlice({\n  name: 'cartdetails',\n  initialState: {\n    orders: [],\n    total: 0,\n    userid: {}\n  },\n  reducers: {\n    orderUpdater: (state, action) => {\n      state.orders[state.orders.length] = action.payload;\n    },\n    useridUpdater: (state, action) => {\n      state.userid = action.payload;\n    },\n    deleteOrder: (state, action) => {\n      if (state.orders.length === 1) {\n        state.orders = [];\n        state.total = 0;\n      } else {\n        try {\n          const x = state.orders.filter(item => item.index === action.payload);\n          state.total = state.total - x.price; // arr = arr.filter(item => item !== value)\n\n          state.orders = state.orders.filter(item => item.index !== action.payload);\n          console.log(state.orders);\n          console.log(state.total);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    },\n    totalCal: (state, action) => {\n      state.total = state.total + action.payload;\n    }\n  }\n});\nexport const {\n  orderUpdater,\n  useridUpdater,\n  deleteOrder,\n  totalCal\n} = cartSlice.actions;\nexport const selectOrders = state => state.cartdetails.orders;\nexport const selectUserId = state => state.cartdetails.userid;\nexport const selectTotal = state => state.cartdetails.total;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["F:/React Applications/my-barber/src/slices/cartDetailsSlice.js"],"names":["createSlice","cartSlice","name","initialState","orders","total","userid","reducers","orderUpdater","state","action","length","payload","useridUpdater","deleteOrder","x","filter","item","index","price","console","log","e","totalCal","actions","selectOrders","cartdetails","selectUserId","selectTotal","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAC,aAD4B;AAEjCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,KAAK,EAAE,CAFE;AAGTC,IAAAA,MAAM,EAAE;AAHC,GAFoB;AAOjCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC3BD,MAAAA,KAAK,CAACL,MAAN,CAAaK,KAAK,CAACL,MAAN,CAAaO,MAA1B,IAAoCD,MAAM,CAACE,OAA3C;AACH,KAHI;AAILC,IAAAA,aAAa,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAiB;AAC5BD,MAAAA,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACE,OAAtB;AACH,KANI;AAOLE,IAAAA,WAAW,EAAC,CAACL,KAAD,EAAQC,MAAR,KAAiB;AACzB,UAAGD,KAAK,CAACL,MAAN,CAAaO,MAAb,KAAwB,CAA3B,EAA6B;AACzBF,QAAAA,KAAK,CAACL,MAAN,GAAe,EAAf;AACAK,QAAAA,KAAK,CAACJ,KAAN,GAAc,CAAd;AACH,OAHD,MAGK;AACD,YAAG;AACC,gBAAMU,CAAC,GAAGN,KAAK,CAACL,MAAN,CAAaY,MAAb,CAAqBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeR,MAAM,CAACE,OAAnD,CAAV;AACAH,UAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,GAAcU,CAAC,CAACI,KAA9B,CAFD,CAGC;;AACAV,UAAAA,KAAK,CAACL,MAAN,GAAeK,KAAK,CAACL,MAAN,CAAaY,MAAb,CAAqBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeR,MAAM,CAACE,OAAnD,CAAf;AACAQ,UAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACL,MAAlB;AACAgB,UAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACJ,KAAlB;AACH,SAPD,CAOC,OAAMiB,CAAN,EAAQ;AACLF,UAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH;AACJ;AAEJ,KAxBI;AAyBLC,IAAAA,QAAQ,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAiB;AACvBD,MAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACE,OAAnC;AACH;AA3BI;AAPwB,CAAD,CAA7B;AAsCP,OAAO,MAAM;AAACJ,EAAAA,YAAD;AAAeK,EAAAA,aAAf;AAA8BC,EAAAA,WAA9B;AAA2CS,EAAAA;AAA3C,IAAuDtB,SAAS,CAACuB,OAAvE;AAEP,OAAO,MAAMC,YAAY,GAAGhB,KAAK,IAAIA,KAAK,CAACiB,WAAN,CAAkBtB,MAAhD;AACP,OAAO,MAAMuB,YAAY,GAAGlB,KAAK,IAAIA,KAAK,CAACiB,WAAN,CAAkBpB,MAAhD;AACP,OAAO,MAAMsB,WAAW,GAAGnB,KAAK,IAAIA,KAAK,CAACiB,WAAN,CAAkBrB,KAA/C;AAGP,eAAeJ,SAAS,CAAC4B,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const cartSlice = createSlice({\r\n    name:'cartdetails',\r\n    initialState:{\r\n        orders: [],\r\n        total: 0,\r\n        userid: {},\r\n    },\r\n    reducers:{\r\n        orderUpdater: (state, action)=>{\r\n            state.orders[state.orders.length] = action.payload;\r\n        },\r\n        useridUpdater: (state, action)=>{\r\n            state.userid = action.payload;\r\n        },\r\n        deleteOrder:(state, action)=>{\r\n            if(state.orders.length === 1){\r\n                state.orders = [];\r\n                state.total = 0;\r\n            }else{\r\n                try{\r\n                    const x = state.orders.filter( item => item.index === action.payload);\r\n                    state.total = state.total - x.price;\r\n                    // arr = arr.filter(item => item !== value)\r\n                    state.orders = state.orders.filter( item => item.index !== action.payload);\r\n                    console.log(state.orders)\r\n                    console.log(state.total)\r\n                }catch(e){\r\n                    console.log(e)\r\n                }\r\n            }\r\n            \r\n        },\r\n        totalCal: (state, action)=>{\r\n            state.total = state.total + action.payload;\r\n        },\r\n    }\r\n});\r\n\r\nexport const {orderUpdater, useridUpdater, deleteOrder, totalCal} = cartSlice.actions;\r\n\r\nexport const selectOrders = state => state.cartdetails.orders;\r\nexport const selectUserId = state => state.cartdetails.userid;\r\nexport const selectTotal = state => state.cartdetails.total;\r\n\r\n\r\nexport default cartSlice.reducer;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}