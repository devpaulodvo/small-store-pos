{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Axios from \"axios\";\nimport ProductList from './Components/Product/ViewProducts/ProductList';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Register/Register';\nimport React, { useState, useEffect } from 'react';\nimport AdminDashboard from './Components/AdminDashboard/AdminDashboard';\nimport ProtectedRoute from './Components/Route/ProtectedRoute';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authUpdater, selectAuth } from \"./slices/userDetailsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const isAuth = useSelector(selectAuth);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    let result = await Axios.get(\"http://localhost:3001/isUserAuth\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    dispatch(authUpdater(result.data));\n    console.log(isAuth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: [\"/register\"],\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: [\"/\", \"/baligya\"],\n          component: ProductList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/dashboard\",\n          component: AdminDashboard,\n          isAuth: isAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sMW7pWuUOz4393XMyGQahtghuFg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/App.js"],"names":["BrowserRouter","Router","Route","Switch","Axios","ProductList","Login","Register","React","useState","useEffect","AdminDashboard","ProtectedRoute","useSelector","useDispatch","authUpdater","selectAuth","App","isAuth","dispatch","result","get","headers","localStorage","getItem","data","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,2BAAxC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGL,WAAW,CAACG,UAAD,CAA1B;AACA,QAAMG,QAAQ,GAAGL,WAAW,EAA5B;AAEAJ,EAAAA,SAAS,CAAE,YAAY;AAErB,QAAIU,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,kCAAV,EACnB;AAACC,MAAAA,OAAO,EAAE;AAAC,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAnB;AAAV,KADmB,CAAnB;AAEAL,IAAAA,QAAQ,CAACJ,WAAW,CAACK,MAAM,CAACK,IAAR,CAAZ,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACD,GANQ,EAMP,EANO,CAAT;AAUA,sBAEE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,MAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEE,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEZ;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAE,CAAC,WAAD,CAAnB;AAAkC,UAAA,SAAS,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAE,CAAC,GAAD,EAAM,UAAN,CAAnB;AAAsC,UAAA,SAAS,EAAEF;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,YAAtB;AAAoC,UAAA,SAAS,EAAEM,cAA/C;AAA+D,UAAA,MAAM,EAAEO;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBA;;GA9BOD,G;UACQJ,W,EACEC,W;;;KAFVG,G;AAgCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Axios from \"axios\";\nimport ProductList from './Components/Product/ViewProducts/ProductList';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Register/Register';\nimport React, { useState, useEffect }  from 'react';\nimport AdminDashboard from './Components/AdminDashboard/AdminDashboard';\nimport ProtectedRoute from './Components/Route/ProtectedRoute';\nimport { useSelector, useDispatch} from 'react-redux'\nimport { authUpdater, selectAuth } from \"./slices/userDetailsSlice\";\n\n\nfunction App() {\n  const isAuth = useSelector(selectAuth);\n  const dispatch = useDispatch();\n\n  useEffect( async () => {\n      \n    let result = await Axios.get(\"http://localhost:3001/isUserAuth\", \n    {headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\n    dispatch(authUpdater(result.data))\n    console.log(isAuth)\n  },[])\n\n\n\n  return (\n\n    <React.Fragment>\n      <Router>\n          <p>{}</p>\n        <Switch>\n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path={[\"/register\"]} component={Register}/>\n            <Route exact path={[\"/\", \"/baligya\"]} component={ProductList}/>\n            <ProtectedRoute path={\"/dashboard\"} component={AdminDashboard} isAuth={isAuth}/>\n        </Switch>\n\n      </Router>\n\n    </React.Fragment>\n  );\n }\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}