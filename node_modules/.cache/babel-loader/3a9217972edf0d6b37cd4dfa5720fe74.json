{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport * as Yup from 'yup';\nimport styles from './Register.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [username1, setUsername] = useState('');\n  const [password1, setPassword] = useState('');\n  const [cpassword1, setCPassword] = useState('');\n  let RegisterSchema = Yup.object().shape({\n    username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username').test(\"is_exists\", `${username1} is not available`, value => {\n      return new Promise(async (resolve, reject) => {\n        let result = await Axios.post(\"http://localhost:3001/checkusername\", {\n          username: username1,\n          password: password1\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (value === result.data.username) {\n          resolve(false);\n        } else {\n          resolve(true);\n        }\n      });\n    }),\n    password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\n    cpassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password')\n  });\n\n  const sendPostRequest = async () => {\n    try {\n      let result = await Axios.post(\"http://localhost:3001/register\", {\n        username: username1,\n        password: password1\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return result;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        password: '',\n        cpassword: ''\n      },\n      validationSchema: RegisterSchema,\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setTimeout(() => {\n          sendPostRequest().then(() => {\n            setPassword('');\n            setUsername('');\n            resetForm({\n              values: ''\n            });\n          });\n          setSubmitting(false);\n        }, 100);\n      },\n      children: ({\n        isSubmitting,\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setUsername(event.target.value);\n          },\n          type: \"text\",\n          name: \"username\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 61\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"password\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 61\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `${styles.label}`,\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setCPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"cpassword\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), errors.cpassword && touched.cpassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.cpassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 63\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: null,\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: `${styles.button}`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"SRdkX483/SxEUkKqNIqpQf+tHsw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","Yup","styles","Register","props","username1","setUsername","password1","setPassword","cpassword1","setCPassword","RegisterSchema","object","shape","username","string","min","required","test","value","Promise","resolve","reject","result","post","password","headers","data","cpassword","oneOf","ref","sendPostRequest","err","console","log","div","textAlign","values","setSubmitting","resetForm","setTimeout","then","isSubmitting","errors","touched","form","label","event","target","input","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport * as Yup from 'yup';\n\nimport styles from './Register.module.css';\n\nconst Register = (props) => {\n    \n    const [username1, setUsername] = useState('');\n    const [password1, setPassword] = useState('');\n    const [cpassword1, setCPassword] = useState('');\n\n    let RegisterSchema = Yup.object().shape({\n        username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username')\n        .test(\"is_exists\", `${username1} is not available`, (value)=>{\n            return new Promise( async (resolve, reject)=>{\n                let result = await Axios.post(\"http://localhost:3001/checkusername\", {\n                    username: username1,\n                    password: password1\n                    }, {\n                        headers: {'Content-Type': 'application/json'}\n                    })\n                    \n            if(value === result.data.username){\n                resolve(false)\n            }\n            else{\n                resolve(true)\n            }\n            })\n        }),\n        password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\n        cpassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password')\n    });\n\n    const sendPostRequest = async () => {\n        try{\n        let result = await Axios.post(\"http://localhost:3001/register\", {\n        username: username1,\n        password: password1\n        }, {\n            headers: {'Content-Type': 'application/json'}\n        });\n        return result;\n        }catch(err){\n            console.log(err);\n        }\n    };\n\n    return(\n        <div className={styles.div}>\n            <h4 style={{textAlign: 'center'}}>Register</h4>\n            <Formik\n                initialValues={{ username: '', password: '', cpassword:'' }}\n                validationSchema={RegisterSchema}\n                onSubmit={(values, {setSubmitting, resetForm}) => {\n                    setTimeout(() => {\n                    sendPostRequest().then(() =>{\n                        setPassword('');\n                        setUsername('');\n                        resetForm({values: ''});\n                    })\n                    setSubmitting(false);\n                    }, 100);\n                }}\n                >\n                {({ isSubmitting, errors, touched }) => (\n                    <Form className={styles.form}>\n                        <label className={`${styles.label}`}>Username</label>\n                    <Field onKeyUp={(event) => {setUsername(event.target.value)}} type=\"text\" name=\"username\" className={`${styles.input}`}/>\n                    {/* <ErrorMessage name=\"username\" component=\"div\" /> */}\n                    {\n                     errors.username && touched.username ? (<div>{errors.username}</div>) : null\n                    }\n                    <label className={`${styles.label}`}>Password</label>\n                    <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\n                    {\n                     errors.password && touched.password ? (<div>{errors.password}</div>) : null\n                    }\n                    <label className={`${styles.label}`}>Confirm Password</label>\n                    <Field onKeyUp={(event) => {setCPassword(event.target.value)}} type=\"password\" name=\"cpassword\" className={`${styles.input}`}/>\n                    {\n                     errors.cpassword && touched.cpassword ? (<div>{errors.cpassword}</div>) : null\n                    }\n                    <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                        Submit\n                    </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}