{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport styles from './NewProduct.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProduct = () => {\n  _s();\n\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  const addProduct = () => {\n    Axios.post(\"http://localhost:3001/api/insert\", {\n      productName: productName,\n      price: productPrice\n    }).then(() => {\n      alert(\"successful insert\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        productName: '',\n        price: ''\n      },\n      validationSchema: AddProductSchema,\n      validateOnBlur: false,\n      validateOnChange: false,\n      onSubmit: async (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setTimeout(async () => {\n          let result = await Axios.post(\"http://localhost:3001/api/insert\", {\n            productName: productName,\n            price: productPrice\n          });\n          resetForm('');\n          setProductName('');\n          setProductPrice('');\n          setSubmitting(false);\n        }, 100);\n      },\n      children: ({\n        isSubmitting,\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setProductName(event.target.value);\n          },\n          type: \"text\",\n          name: \"productName\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 61\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewProduct, \"8hMDzejkHsRnH5jqGSGpruVUi0M=\");\n\n_c = NewProduct;\nexport default NewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js"],"names":["React","useState","Axios","Formik","Form","Field","ErrorMessage","AddProductSchema","styles","NewProduct","productName","setProductName","productPrice","setProductPrice","addProduct","post","price","then","alert","container","values","setSubmitting","resetForm","setTimeout","result","isSubmitting","errors","touched","event","target","value","input","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AAEpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMa,UAAU,GAAG,MAAK;AACpBZ,IAAAA,KAAK,CAACa,IAAN,CAAW,kCAAX,EAA+C;AAC3CL,MAAAA,WAAW,EAAEA,WAD8B;AAE3CM,MAAAA,KAAK,EAAEJ;AAFoC,KAA/C,EAGGK,IAHH,CAGQ,MAAI;AACJC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,KALL;AAMH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEV,MAAM,CAACW,SAAU,EAApC;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AAAET,QAAAA,WAAW,EAAE,EAAf;AAAmBM,QAAAA,KAAK,EAAE;AAA1B,OADnB;AAEI,MAAA,gBAAgB,EAAET,gBAFtB;AAGI,MAAA,cAAc,EAAE,KAHpB;AAII,MAAA,gBAAgB,EAAE,KAJtB;AAKI,MAAA,QAAQ,EAAE,OAAOa,MAAP,EAAe;AAACC,QAAAA,aAAD;AAAgBC,QAAAA;AAAhB,OAAf,KAA8C;AACpDC,QAAAA,UAAU,CAAC,YAAY;AACnB,cAAIC,MAAM,GAAG,MAAOtB,KAAK,CAACa,IAAN,CAAW,kCAAX,EAA+C;AAC/DL,YAAAA,WAAW,EAAEA,WADkD;AAE/DM,YAAAA,KAAK,EAAEJ;AAFwD,WAA/C,CAApB;AAIAU,UAAAA,SAAS,CAAC,EAAD,CAAT;AACAX,UAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,UAAAA,eAAe,CAAC,EAAD,CAAf;AACAQ,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH,SATS,EASP,GATO,CAAV;AAUH,OAhBL;AAAA,gBAkBK,CAAC;AAACI,QAAAA,YAAD;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,OAAD,kBACG,QAAC,IAAD;AAAA,gCACJ,QAAC,KAAD;AAAO,UAAA,OAAO,EAAGC,KAAD,IAAW;AAACjB,YAAAA,cAAc,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAAmC,WAA/D;AAAiE,UAAA,IAAI,EAAC,MAAtE;AAA6E,UAAA,IAAI,EAAC,aAAlF;AAAgG,UAAA,SAAS,EAAG,GAAEtB,MAAM,CAACuB,KAAM;AAA3H;AAAA;AAAA;AAAA;AAAA,gBADI,EAGCL,MAAM,CAACM,QAAP,IAAmBL,OAAO,CAACK,QAA3B,gBAAuC;AAAA,oBAAMN,MAAM,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAvC,GAAuE,IAHxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH,CA7DD;;GAAMvB,U;;KAAAA,U;AA+DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\n\nimport styles from './NewProduct.module.css';\n\nconst NewProduct = () =>{\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    const addProduct = () =>{\n        Axios.post(\"http://localhost:3001/api/insert\", {\n            productName: productName, \n            price: productPrice\n        }).then(()=>{\n                alert(\"successful insert\");\n            });\n    }\n\n    return( \n        <div className={`${styles.container}`}> \n            <Formik\n                initialValues={{ productName: '', price: ''}}\n                validationSchema={AddProductSchema}\n                validateOnBlur={false}\n                validateOnChange={false}\n                onSubmit={async (values, {setSubmitting, resetForm}) => {\n                    setTimeout(async () => {\n                        let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\n                            productName: productName, \n                            price: productPrice\n                        })\n                        resetForm('');\n                        setProductName('');\n                        setProductPrice('');\n                        setSubmitting(false);\n                    }, 100);\n                }}\n            >\n                {({isSubmitting, errors, touched})=>(\n                    <Form>\n                <Field onKeyUp={(event) => {setProductName(event.target.value)}} type=\"text\" name=\"productName\" className={`${styles.input}`}/>\n                    {\n                     errors.username && touched.username ? (<div>{errors.username}</div>) : null\n                    }\n                </Form>\n                )}\n            </Formik>\n        \n            {/* <form>\n                <label>Product Name</label>\n                <input \n                    type=\"text\" \n                    name=\"productName\" \n                    onChange={(event) => {setProductName(event.target.value.toLowerCase())}}\n                />\n                <label>Product Price</label>\n                <input \n                    type=\"text\"\n                    name=\"productPrice\" \n                    onChange={(event) => {setProductPrice(event.target.value.toLowerCase())}}\n                />\n                <Button onClick={addProduct}>Add Product</Button>\n            </form> */}\n        </div>\n    )\n}\n\nexport default NewProduct;"]},"metadata":{},"sourceType":"module"}