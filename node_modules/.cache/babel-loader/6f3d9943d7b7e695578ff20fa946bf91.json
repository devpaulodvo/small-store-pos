{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [searchProduct, setSearchProduct] = useState('');\n  const [products, getProducts] = useState([]);\n  const [productId, setProductId] = useState(''); // const [productName, setProductName] = useState('');\n  // const [productPrice, setProductPrice] = useState('');\n\n  const addProductSchema = AddProductSchema;\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n  useEffect(() => {\n    myfunction();\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/get');\n    getProducts(result.data);\n  };\n\n  const updateProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/updateproduct\", {\n      productName: formik.initialValues.productName,\n      price: formik.initialValues.price,\n      productId: productId\n    });\n    window.alert(result.data.message);\n    myfunction();\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n\n    if (filteredProductArray.length === 0) {\n      setProductName('');\n      setProductPrice('');\n    } else {\n      // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n      // document.getElementById('price').value = filteredProductArray[0].price;\n      formik.initialValues.productName = filteredProductArray[0].productName.charAt(0).toUpperCase() + filteredProductArray[0].productName.slice(1);\n      formik.initialValues.price = filteredProductArray[0].price; // setProductName(filteredProductArray[0].productName.toLowerCase());\n      // setProductPrice(filteredProductArray[0].price);\n\n      setProductId(filteredProductArray[0].productId);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      productName: '',\n      price: ''\n    },\n    validationSchema: addProductSchema,\n    validateOnBlur: false,\n    validateOnMount: false,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        updateProduct();\n        resetForm({\n          productName: '',\n          price: ''\n        });\n        setProductId('');\n        setSubmitting(false);\n      }, 100);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(ProductFilter, {\n      filteredProduct: filteredProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            formik.values.productName = e.target.value;\n            setProductName(e.target.value);\n          },\n          name: \"productName\",\n          type: \"text\",\n          id: \"productname\",\n          value: formik.values.productName.charAt(0).toUpperCase() + formik.values.productName.slice(1),\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), formik.errors.productName && formik.touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: formik.errors.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 84\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            formik.values.price = e.target.value;\n            setProductPrice(e.target.value);\n          },\n          type: \"number\",\n          name: \"price\",\n          id: \"price\",\n          value: formik.values.price,\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), formik.errors.price && formik.touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: formik.errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 72\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: null,\n          disabled: formik.isSubmitting,\n          type: \"submit\",\n          className: `${styles.button}`,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancel(),\n          disabled: formik.isSubmitting,\n          type: \"submit\",\n          className: `${styles.button} ${styles.red}`,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"OyvVOsh1aX3pI9QBvhqXS8LWn08=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js"],"names":["React","useState","useEffect","styles","Axios","Formik","Form","Field","ErrorMessage","useFormik","useHistory","AddProductSchema","ProductFilter","createRef","UpdateProduct","history","searchProduct","setSearchProduct","products","getProducts","productId","setProductId","addProductSchema","filteredProductArray","filter","product","productName","includes","toLowerCase","myfunction","result","get","data","updateProduct","post","formik","initialValues","price","window","alert","message","cancel","push","filteredProduct","event","target","value","length","setProductName","setProductPrice","charAt","toUpperCase","slice","validationSchema","validateOnBlur","validateOnMount","onSubmit","values","setSubmitting","resetForm","setTimeout","container","center","h1","handleSubmit","label","e","input","errors","touched","error","isSubmitting","button","red"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom'; \nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\n\n\nconst UpdateProduct = () => {\n    const history = useHistory();\n    const [searchProduct, setSearchProduct] = useState('');\n    const [products, getProducts] = useState([]);\n    const [productId, setProductId] = useState('');\n    // const [productName, setProductName] = useState('');\n    // const [productPrice, setProductPrice] = useState('');\n    const addProductSchema = AddProductSchema;\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n    \n\n    useEffect(()=>{\n        myfunction()\n    },[]);\n\n    const myfunction = async () => {\n        let result = await Axios.get('http://localhost:3001/api/get')\n        getProducts(result.data);\n      }\n\n    const updateProduct = async () =>{\n         let result = await  Axios.post(\"http://localhost:3001/updateproduct\", {\n            productName: formik.initialValues.productName, \n            price: formik.initialValues.price,\n            productId: productId,\n        })\n\n\n        window.alert(result.data.message)\n        myfunction()\n    }\n\n    const cancel = () => {\n        history.push('/dashboard');\n    }\n\n    \n\n    const filteredProduct = (event) => {\n        setSearchProduct(event.target.value);\n\n        if(filteredProductArray.length === 0){\n            setProductName('');\n            setProductPrice('');\n        }else{\n            // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n            // document.getElementById('price').value = filteredProductArray[0].price;\n            formik.initialValues.productName = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n            formik.initialValues.price = filteredProductArray[0].price;\n            // setProductName(filteredProductArray[0].productName.toLowerCase());\n            // setProductPrice(filteredProductArray[0].price);\n            setProductId(filteredProductArray[0].productId);\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: {productName: '', price: ''},\n        validationSchema: addProductSchema,\n        validateOnBlur:false,\n        validateOnMount:false,\n        onSubmit: (values, {setSubmitting, resetForm}) => {\n            setTimeout(() => {\n                updateProduct()\n                resetForm({productName: '', price: ''});\n                setProductId('');\n                setSubmitting(false);\n            }, 100);\n        },\n      });\n   \n\n    return(\n        <div className={`${styles.container}`}> \n            <ProductFilter filteredProduct={filteredProduct}/>\n            <div className={styles.center}>\n                <h1 className={styles.h1}>Update Product</h1>\n                    <form onSubmit={formik.handleSubmit}>\n                        <label className={styles.label}>Product Name</label>\n                        <input\n                        onChange={e =>{\n                            formik.values.productName = e.target.value\n                            setProductName(e.target.value)\n                        }}\n                        name=\"productName\"\n                        type=\"text\"\n                        id=\"productname\" \n                        value={formik.values.productName.charAt(0).toUpperCase()+formik.values.productName.slice(1)}\n                        className={`${styles.input}`}/>\n                        {\n                        formik.errors.productName && formik.touched.productName ? (<div className={styles.error}>{formik.errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <input\n                        onChange={e =>{\n                            formik.values.price = e.target.value\n                            setProductPrice(e.target.value)\n                        }}\n                        type=\"number\" \n                        name=\"price\" \n                        id=\"price\"\n                        value={formik.values.price}\n                        className={`${styles.input}`}/>\n                        {\n                        formik.errors.price && formik.touched.price ? (<div className={styles.error}>{formik.errors.price}</div>) : null\n                        }\n                        <button \n                            onSubmit={null}\n                            disabled={formik.isSubmitting} \n                            type=\"submit\"  \n                            className={`${styles.button}`}>\n                            Update\n                        </button>\n                        <button onClick={()=>cancel()} disabled={formik.isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </form>\n                    \n                    \n                {/* </Formik> */}\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}