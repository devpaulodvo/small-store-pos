{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport * as Yup from 'yup';\nimport styles from './Register.module.css';\nimport Header from \"../Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [username1, setUsername] = useState('');\n  const [password1, setPassword] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [cpassword1, setCPassword] = useState('');\n  let registerSchema = Yup.object().shape({\n    username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username').test(\"is_exists\", \"Not Available\", value => {\n      return new Promise((resolve, reject) => {\n        setTimeout(async () => {\n          try {\n            let result = await Axios.post(\"http://localhost:3001/checkusername\", {\n              username: username1,\n              password: password1\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n\n            if (value === result.data.username) {\n              resolve(false);\n            } else {\n              resolve(true);\n            }\n          } catch (err) {\n            console.log(err);\n          }\n        }, 500);\n      });\n    }),\n    password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\n    cpassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password')\n  });\n\n  const sendPostRequest = async () => {\n    try {\n      let result = await Axios.post(\"http://localhost:3001/register\", {\n        username: username1,\n        password: password1\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: '',\n          cpassword: ''\n        },\n        validationSchema: registerSchema,\n        onSubmit: async (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            sendPostRequest();\n            resetForm({\n              values: ''\n            });\n            setPassword('');\n            setUsername('');\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched,\n          status\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setUsername(event.target.value);\n            },\n            type: \"text\",\n            name: \"username\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 61\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setPassword(event.target.value);\n            },\n            type: \"password\",\n            name: \"password\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 61\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setCPassword(event.target.value);\n            },\n            type: \"password\",\n            name: \"cpassword\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), errors.cpassword && touched.cpassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.cpassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 63\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"fUrcCt1spj1RkfgrOpuhUHSO4J8=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","Yup","styles","Header","Register","props","username1","setUsername","password1","setPassword","firstname","setFirstname","cpassword1","setCPassword","registerSchema","object","shape","username","string","min","required","test","value","Promise","resolve","reject","setTimeout","result","post","password","headers","data","err","console","log","cpassword","oneOf","ref","sendPostRequest","div","textAlign","values","setSubmitting","resetForm","isSubmitting","errors","touched","status","form","label","event","target","input","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport * as Yup from 'yup';\n\n\nimport styles from './Register.module.css';\nimport Header from \"../Header/Header\";\n\nconst Register = (props) => {\n    \n    const [username1, setUsername] = useState('');\n    const [password1, setPassword] = useState('');\n    const [firstname, setFirstname] = useState('');\n    const [cpassword1, setCPassword] = useState('');\n\n    let registerSchema = Yup.object().shape({\n        username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username')\n        .test(\"is_exists\", \"Not Available\", (value)=>{\n            return new Promise((resolve, reject)=>{\n               setTimeout(async()=>{\n                try{\n                    let result = await Axios.post(\"http://localhost:3001/checkusername\", {\n                        username: username1,\n                        password: password1\n                    }, {headers: {'Content-Type': 'application/json'}})\n                   if(value === result.data.username){\n                        resolve(false)\n                    }else{\n                        resolve(true)\n                    }\n                }catch(err){\n                    console.log(err);\n                }\n               }, 500)\n               \n            })\n        })\n        ,\n        password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\n        cpassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password')\n    });\n\n    const sendPostRequest = async () => {\n        try{\n        let result = await Axios.post(\"http://localhost:3001/register\", {\n        username: username1,\n        password: password1\n        }, {\n            headers: {'Content-Type': 'application/json'}\n        });\n        }catch(err){\n            console.log(err);\n        }\n    };\n\n    return(\n        <React.Fragment>\n        <Header/>\n        <div className={styles.div}>\n            <h4 style={{textAlign: 'center'}}>Register</h4>\n            <Formik\n                initialValues={{ username: '', password: '', cpassword:'' }}\n                validationSchema={registerSchema}\n                onSubmit={async (values, {setSubmitting, resetForm }) => {\n                        setTimeout(() => {\n                            sendPostRequest()\n                            resetForm({values: ''});\n                            setPassword('');\n                            setUsername('');\n                            setSubmitting(false);\n                        }, 100);\n                }}\n                >\n                {({ isSubmitting, errors, touched, status }) => (\n                    <Form className={styles.form}>\n                        <label className={`${styles.label}`}>Username</label>\n                    <Field  \n                        onKeyUp={(event) => {\n                            setUsername(event.target.value)\n                        }} \n                        type=\"text\" \n                        name=\"username\" \n                        className={`${styles.input}`}\n                    />\n                    {\n                     errors.username && touched.username ? (<div>{errors.username}</div>) : null\n                    }\n                    <label className={`${styles.label}`}>Password</label>\n                    <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\n                    {\n                     errors.password && touched.password ? (<div>{errors.password}</div>) : null\n                    }\n                    <label className={`${styles.label}`}>Confirm Password</label>\n                    <Field onKeyUp={(event) => {setCPassword(event.target.value)}} type=\"password\" name=\"cpassword\" className={`${styles.input}`}/>\n                    {\n                     errors.cpassword && touched.cpassword ? (<div>{errors.cpassword}</div>) : null\n                    }\n                    <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                        Submit\n                    </button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n        </React.Fragment>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}