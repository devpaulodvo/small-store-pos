{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [searchProduct, setSearchProduct] = useState('');\n  const [products, getProducts] = useState([]);\n  const [productId, setProductId] = useState('');\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  useEffect(() => {\n    myfunction(); // Axios.get('http://localhost:3001/api/get').then((response)=>{\n    //     getProducts(response.data);\n    // })\n    // return function cleanup() {\n    //   };\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/get');\n    getProducts(result.data);\n  };\n\n  const updateProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/api/update-product\", {\n      productName: productName,\n      price: productPrice,\n      productId: productId\n    });\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n\n    if (filteredProductArray.length === 0) {\n      setProductName('');\n      setProductPrice('');\n    } else {\n      console.log(filteredProductArray[0].productName.charAt(0).toUpperCase() + filteredProductArray[0].productName.slice(1)); // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n      // setProductName(filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1));\n      // setProductPrice(filteredProductArray[0].price);\n      // setProductId(filteredProductArray[0].productId);\n      // setFieldValue()\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      productName: '',\n      price: ''\n    },\n    validateOnBlur: false,\n    validateOnMount: false,\n    validateOnChange: false,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(ProductFilter, {\n      filteredProduct: filteredProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), ({\n        isSubmitting,\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            setProductName(event.target.value.toLowerCase());\n          },\n          name: \"productName\",\n          type: \"text\",\n          id: \"productname\" // value={productName}\n          ,\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: errors.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 70\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            setProductPrice(event.target.value);\n          },\n          type: \"text\",\n          name: \"price\",\n          id: \"price\" // value={productPrice}\n          ,\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 58\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: null,\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: `${styles.button}`,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancel(),\n          disabled: isSubmitting,\n          type: \"submit\",\n          className: `${styles.button} ${styles.red}`,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"xJOJHuAshznaxQcdCk+SKFETDs4=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js"],"names":["React","useState","useEffect","styles","Axios","Formik","Form","Field","ErrorMessage","useFormik","useHistory","AddProductSchema","ProductFilter","createRef","UpdateProduct","history","searchProduct","setSearchProduct","products","getProducts","productId","setProductId","productName","setProductName","productPrice","setProductPrice","myfunction","result","get","data","updateProduct","post","price","cancel","push","filteredProductArray","filter","product","includes","toLowerCase","filteredProduct","event","target","value","length","console","log","charAt","toUpperCase","slice","formik","initialValues","validateOnBlur","validateOnMount","validateOnChange","onSubmit","values","setSubmitting","resetForm","alert","JSON","stringify","container","center","h1","isSubmitting","errors","touched","handleSubmit","label","input","error","button","red"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom'; \nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\n\n\nconst UpdateProduct = () => {\n    const history = useHistory();\n    const [searchProduct, setSearchProduct] = useState('');\n    const [products, getProducts] = useState([]);\n    const [productId, setProductId] = useState('');\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    useEffect(()=>{\n        myfunction()\n        // Axios.get('http://localhost:3001/api/get').then((response)=>{\n        //     getProducts(response.data);\n        // })\n        // return function cleanup() {\n        //   };\n    },[]);\n\n    const myfunction = async () => {\n        let result = await Axios.get('http://localhost:3001/api/get')\n        getProducts(result.data);\n      }\n\n    const updateProduct = async () =>{\n         let result = await  Axios.post(\"http://localhost:3001/api/update-product\", {\n            productName: productName, \n            price: productPrice,\n            productId: productId,\n        })\n    }\n\n    const cancel = () => {\n        history.push('/dashboard');\n    }\n\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n    const filteredProduct = (event) => {\n        setSearchProduct(event.target.value);\n\n        if(filteredProductArray.length === 0){\n            setProductName('');\n            setProductPrice('');\n        }else{\n            console.log(filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1))\n            // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n            // setProductName(filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1));\n            // setProductPrice(filteredProductArray[0].price);\n            // setProductId(filteredProductArray[0].productId);\n            // setFieldValue()\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: { productName: '', price: ''},\n        validateOnBlur:false,\n        validateOnMount:false,\n        validateOnChange:false,\n        onSubmit: (values, {setSubmitting, resetForm}) => {\n          alert(JSON.stringify(values, null, 2));\n        },\n      });\n\n    return(\n        <div className={`${styles.container}`}> \n            <ProductFilter filteredProduct={filteredProduct}/>\n            <div className={styles.center}>\n                <input />\n                <h1 className={styles.h1}>Update Product</h1>\n                {/* <Formik\n                    initialValues={{ productName: '', price: ''}}\n                    validationSchema={AddProductSchema}\n                    validateOnBlur={false}\n                    validateOnMount={false}\n                    validateOnChange={false}\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\n                        \n                        setTimeout(() => {\n                            updateProduct()\n                             window.alert(\"Product Updated!\")\n                            resetForm({values: ''});\n                            setProductName('');\n                            setProductPrice('');\n                            setSubmitting(false);\n                        }, 100);\n                    }}\n                > */}\n                    {({isSubmitting, errors, touched})=>(\n                    <form onSubmit={formik.handleSubmit}>\n                        <label className={styles.label}>Product Name</label>\n                        <input\n                        onChange={(event) => {setProductName(event.target.value.toLowerCase())}} \n                        name=\"productName\"\n                        type=\"text\"\n                        id=\"productname\" \n                        // value={productName}\n                        className={`${styles.input}`}/>\n                        {\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <input\n                        onChange={(event) => {setProductPrice(event.target.value)}} \n                        type=\"text\" \n                        name=\"price\" \n                        id=\"price\"\n                        // value={productPrice}\n                        className={`${styles.input}`}/>\n                        {\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\n                        }\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                            Update\n                        </button>\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </form>\n                    \n                    )}\n                    \n                {/* </Formik> */}\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}