{"ast":null,"code":"var _jsxFileName = \"F:\\\\React Applications\\\\my-barber\\\\src\\\\Components\\\\Product\\\\NewProduct\\\\NewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport styles from './NewProduct.module.css';\nimport ManageProductMenu from \"../ManageProductMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  const addProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/api/insert\", {\n      productName: productName.toLowerCase(),\n      price: productPrice\n    }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    });\n    window.alert(\"Product Already Exists!\");\n\n    if (result == 0) {\n      window.alert(\"Product Already Exists!\");\n    } else {\n      window.alert(\"Product Added!\");\n    } // let result = await Axios.post(\"http://localhost:3001/api/cinsert\",{\n    //     productName: productName.toLowerCase(),\n    //     price: productPrice\n    // },{headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\n    // console.log(result)\n\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          productName: '',\n          price: ''\n        },\n        validationSchema: AddProductSchema,\n        validateOnBlur: false,\n        validateOnChange: false,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            addProduct();\n            resetForm({\n              values: ''\n            });\n            setProductName('');\n            setProductPrice('');\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductName(event.target.value);\n            },\n            type: \"text\",\n            name: \"productName\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 70\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductPrice(event.target.value);\n            },\n            type: \"number\",\n            name: \"price\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 58\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancel(),\n            disabled: isSubmitting,\n            type: \"submit\",\n            className: `${styles.button} ${styles.red}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewProduct, \"pZv6B9UB1Fq5Svdu1YB3J9aOuSI=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProduct;\nexport default NewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"sources":["F:/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js"],"names":["React","useState","Axios","Formik","Form","Field","ErrorMessage","useHistory","AddProductSchema","styles","ManageProductMenu","NewProduct","history","productName","setProductName","productPrice","setProductPrice","addProduct","result","post","toLowerCase","price","headers","localStorage","getItem","window","alert","cancel","push","container","center","h1","values","setSubmitting","resetForm","setTimeout","isSubmitting","errors","touched","label","event","target","value","input","error","button","red"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\r\n\r\nimport styles from './NewProduct.module.css';\r\nimport ManageProductMenu from \"../ManageProductMenu\";\r\n\r\nconst NewProduct = () =>{\r\n    const history = useHistory();\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState('');\r\n\r\n    const addProduct = async () =>{\r\n         let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\r\n            productName: productName.toLowerCase(),\r\n            price: productPrice\r\n        },{headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\r\n\r\n        window.alert(\"Product Already Exists!\")\r\n        if(result == 0){\r\n            window.alert(\"Product Already Exists!\")\r\n        }\r\n        else{  \r\n            window.alert(\"Product Added!\")\r\n        }\r\n        // let result = await Axios.post(\"http://localhost:3001/api/cinsert\",{\r\n        //     productName: productName.toLowerCase(),\r\n        //     price: productPrice\r\n        // },{headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\r\n\r\n        // console.log(result)\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/dashboard');\r\n    }\r\n\r\n    return( \r\n        <div className={`${styles.container}`}>\r\n            <div className={styles.center}>\r\n                <h1 className={styles.h1}>Add Product</h1>\r\n                <Formik\r\n                    initialValues={{ productName: '', price: ''}}\r\n                    validationSchema={AddProductSchema}\r\n                    validateOnBlur={false}\r\n                    validateOnChange={false}\r\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                        setTimeout(() => {\r\n                            addProduct()\r\n                            resetForm({values: ''});\r\n                            setProductName('');\r\n                            setProductPrice('');\r\n                            setSubmitting(false);\r\n                        }, 100);\r\n                    }}\r\n                >\r\n                    {({isSubmitting, errors, touched})=>(\r\n                    <Form>\r\n                        <label className={styles.label}>Product Name</label>\r\n                        <Field onKeyUp={(event) => {setProductName(event.target.value)}} type=\"text\" name=\"productName\" className={`${styles.input}`}/>\r\n                        {\r\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\r\n                        }\r\n                         <label className={styles.label}>Product Price</label>\r\n                        <Field onKeyUp={(event) => {setProductPrice(event.target.value)}} type=\"number\" name=\"price\" className={`${styles.input}`}/>\r\n                        {\r\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\r\n                        }\r\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\r\n                            Submit\r\n                        </button>\r\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\r\n                            Cancel\r\n                        </button>\r\n                    </Form>\r\n                    \r\n                    )}\r\n                    \r\n                </Formik>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProduct;"]},"metadata":{},"sourceType":"module"}