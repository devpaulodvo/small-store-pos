{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/ViewProducts/ProductList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUserId } from \"../../../slices/cartDetailsSlice\";\nimport { useridUpdater } from \"../../../slices/cartDetailsSlice\";\nimport ProductItem from \"./ProductItem\";\nimport ProductFilter from \"./ProductFilter\";\nimport Header from '../../Header/Header';\nimport ViewCart from \"../../Cart/ViewCart\";\nimport EnterCustomer from \"./EnterCustomer/EnterCustomer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userIdSelector = useSelector(selectUserId);\n  const [searchProduct, setSearchProduct] = useState('');\n  let customer = {};\n  const [products, getProducts] = useState([]);\n  useEffect(() => {\n    myfunction();\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/get');\n    getProducts(result.data);\n  };\n\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n  };\n\n  const userIdGetter = async object => {\n    let result = await Axios.post(\"http://localhost:3001/selectuser\", {\n      userid: object\n    });\n\n    if (result.data === null) {\n      window.alert(\"User Not Found!\");\n    } else {\n      dispatch(useridUpdater(result.data.userid));\n      customer = result.data;\n      console.log(customer);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), !userIdSelector ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(EnterCustomer, {\n        userIdGetter: userIdGetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ViewCart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Customer Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductFilter, {\n        filteredProduct: filteredProduct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredProductArray.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"Product Not Found!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 34\n        }, this) : filteredProductArray.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(ProductItem, {\n            productName: product.productName,\n            price: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)\n        }, product.productId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this); // }\n};\n\n_s(ProductList, \"VT3+K47uWlgRdPegSNvHIesz+wg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/ViewProducts/ProductList.js"],"names":["React","useEffect","useState","Axios","useSelector","useDispatch","selectUserId","useridUpdater","ProductItem","ProductFilter","Header","ViewCart","EnterCustomer","ProductList","dispatch","userIdSelector","searchProduct","setSearchProduct","customer","products","getProducts","myfunction","result","get","data","filteredProductArray","filter","product","productName","includes","toLowerCase","filteredProduct","event","target","value","userIdGetter","object","post","userid","window","alert","console","log","length","display","marginRight","textAlign","map","price","productId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,aAAT,QAA8B,kCAA9B;AAGA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AACrB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,cAAc,GAAGX,WAAW,CAACE,YAAD,CAAlC;AAEA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAIgB,QAAQ,GAAG,EAAf;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVoB,IAAAA,UAAU;AACb,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAY;AAC3B,QAAIC,MAAM,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,+BAAV,CAAnB;AACAH,IAAAA,WAAW,CAACE,MAAM,CAACE,IAAR,CAAX;AACD,GAHH;;AAKA,QAAMC,oBAAoB,GAAGN,QAAQ,CAACO,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,WAAR,CAAoBC,QAApB,CAA6Bb,aAAa,CAACc,WAAd,EAA7B,CAA3B,CAA7B;;AAEA,QAAMC,eAAe,GAAIC,KAAD,IAAU;AAC9Bf,IAAAA,gBAAgB,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACnC,QAAId,MAAM,GAAG,MAAMnB,KAAK,CAACkC,IAAN,CAAW,kCAAX,EAA+C;AAC9CC,MAAAA,MAAM,EAAEF;AADsC,KAA/C,CAAnB;;AAIA,QAAGd,MAAM,CAACE,IAAP,KAAgB,IAAnB,EAAwB;AACpBe,MAAAA,MAAM,CAACC,KAAP,CAAa,iBAAb;AACH,KAFD,MAGI;AACA1B,MAAAA,QAAQ,CAACP,aAAa,CAACe,MAAM,CAACE,IAAP,CAAYc,MAAb,CAAd,CAAR;AACApB,MAAAA,QAAQ,GAAGI,MAAM,CAACE,IAAlB;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,QAAZ;AACH;AACJ,GAbD;;AAeA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAACH,cAAD,gBACA;AAAA,6BACG,QAAC,aAAD;AAAe,QAAA,YAAY,EAAEoB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADA,gBAID;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,aAAD;AAAe,QAAA,eAAe,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBACKN,oBAAoB,CAACkB,MAArB,KAAgC,CAAhC,gBAEY;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE,cAAV;AAA0BC,YAAAA,WAAW,EAAE;AAAvC,WAAX;AAAA,iCACD;AAAG,YAAA,KAAK,EAAE;AAACC,cAAAA,SAAS,EAAE;AAAZ,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,gBAFZ,GAMOrB,oBAAoB,CAACsB,GAArB,CAA0BpB,OAAD,iBACrB;AAAI,UAAA,KAAK,EAAE;AAACiB,YAAAA,OAAO,EAAE,cAAV;AAA0BC,YAAAA,WAAW,EAAE;AAAvC,WAAX;AAAA,iCACA,QAAC,WAAD;AACA,YAAA,WAAW,EAAElB,OAAO,CAACC,WADrB;AAEA,YAAA,KAAK,EAAED,OAAO,CAACqB;AAFf;AAAA;AAAA;AAAA;AAAA;AADA,WAAgErB,OAAO,CAACsB,SAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAPZ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAtCqB,CAoErB;AAEH,CAtED;;GAAMpC,W;UACeR,W,EACMD,W;;;KAFrBS,W;AAwEN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Axios from \"axios\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectUserId } from \"../../../slices/cartDetailsSlice\";\nimport { useridUpdater } from \"../../../slices/cartDetailsSlice\";\n\n\nimport ProductItem from \"./ProductItem\";\nimport ProductFilter from \"./ProductFilter\";\nimport Header from '../../Header/Header';\nimport ViewCart from \"../../Cart/ViewCart\";\nimport EnterCustomer from \"./EnterCustomer/EnterCustomer\";\n\nconst ProductList = () =>{\n    const dispatch = useDispatch();\n    const userIdSelector = useSelector(selectUserId);\n\n    const [searchProduct, setSearchProduct] = useState('');\n    let customer = {};\n    const [products, getProducts] = useState([]);\n\n    useEffect(()=>{\n        myfunction()\n    },[]);\n\n    const myfunction = async () => {\n        let result = await Axios.get('http://localhost:3001/api/get')\n        getProducts(result.data);\n      }\n\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n    \n    const filteredProduct = (event) =>{\n        setSearchProduct(event.target.value);\n    }\n\n    const userIdGetter = async (object) => {\n        let result = await Axios.post(\"http://localhost:3001/selectuser\", {\n                            userid: object\n                        });\n\n        if(result.data === null){\n            window.alert(\"User Not Found!\");\n        }\n        else{\n            dispatch(useridUpdater(result.data.userid));\n            customer = result.data;\n            console.log(customer);\n        }\n    }\n\n    return(\n        <React.Fragment>\n            <Header/>\n            {!userIdSelector ? \n            (<div>\n                <EnterCustomer userIdGetter={userIdGetter}/>    \n            </div>) : \n            <div>\n                <ViewCart/>\n                <h1>Customer Name</h1>\n                <ProductFilter filteredProduct={filteredProduct}/>\n                <ul>\n                    {filteredProductArray.length === 0 \n                            ? \n                                (<li style={{display: 'inline-block', marginRight: '5rem'}}>\n                                <p style={{textAlign: 'center'}}>Product Not Found!</p>\n                                </li>)\n                            : \n                            filteredProductArray.map((product) =>\n                                <li style={{display: 'inline-block', marginRight: '5rem'}} key={product.productId}>\n                                <ProductItem \n                                productName={product.productName} \n                                price={product.price}/>\n                                </li>\n                    )}\n                </ul>\n            </div>\n            }\n        </React.Fragment>\n    );\n    // }\n   \n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}