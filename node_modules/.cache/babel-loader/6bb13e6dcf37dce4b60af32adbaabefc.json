{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [searchProduct, setSearchProduct] = useState('');\n  const [products, getProducts] = useState([]);\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  useEffect(() => {\n    document.getElementById(\"productname\").value = \"asd\";\n    myfunction(); // Axios.get('http://localhost:3001/api/get').then((response)=>{\n    //     getProducts(response.data);\n    // })\n    // return function cleanup() {\n    //   };\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/get');\n    getProducts(result.data);\n  };\n\n  const updateProduct = async () => {//  let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\n    //     productName: productName, \n    //     price: productPrice\n    // })\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n\n    if (filteredProductArray.length === 0) {\n      setProductName('');\n    } else {\n      setProductName(filteredProductArray[0].productName.charAt(0).toUpperCase() + filteredProductArray[0].productName.slice(1));\n      setProductPrice(filteredProductArray[0].price);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(ProductFilter, {\n      filteredProduct: filteredProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          productName: '',\n          price: ''\n        },\n        validationSchema: AddProductSchema,\n        validateOnBlur: false,\n        validateOnMount: false,\n        validateOnChange: false,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            updateProduct();\n            window.alert(\"Product Updated!\");\n            resetForm({\n              values: ''\n            });\n            setProductName('');\n            setProductPrice('');\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductName(event.target.value.toLowerCase());\n            },\n            readOnly: true,\n            name: \"productName\",\n            id: \"productname\",\n            value: productName,\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 70\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductPrice(event.target.value);\n            },\n            readOnly: true,\n            type: \"number\",\n            name: \"price\",\n            id: \"price\",\n            value: productPrice,\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 58\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => cancel(),\n            disabled: isSubmitting,\n            type: \"submit\",\n            className: `${styles.button} ${styles.red}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"YOjDQwXyWV/3AiVexv2at4jGxdk=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js"],"names":["React","useState","useEffect","styles","Axios","Formik","Form","Field","ErrorMessage","useHistory","AddProductSchema","ProductFilter","createRef","UpdateProduct","history","searchProduct","setSearchProduct","products","getProducts","productName","setProductName","productPrice","setProductPrice","document","getElementById","value","myfunction","result","get","data","updateProduct","cancel","push","filteredProductArray","filter","product","includes","toLowerCase","filteredProduct","event","target","length","charAt","toUpperCase","slice","price","container","center","h1","values","setSubmitting","resetForm","setTimeout","window","alert","isSubmitting","errors","touched","label","input","error","button","red"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useHistory } from 'react-router-dom'; \nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\n\n\nconst UpdateProduct = () => {\n    const history = useHistory();\n    const [searchProduct, setSearchProduct] = useState('');\n    const [products, getProducts] = useState([]);\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    useEffect(()=>{\n        document.getElementById(\"productname\").value = \"asd\";\n        myfunction()\n        // Axios.get('http://localhost:3001/api/get').then((response)=>{\n        //     getProducts(response.data);\n        // })\n        // return function cleanup() {\n        //   };\n    },[]);\n\n    const myfunction = async () => {\n        let result = await Axios.get('http://localhost:3001/api/get')\n        getProducts(result.data);\n      }\n\n    const updateProduct = async () =>{\n        //  let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\n        //     productName: productName, \n        //     price: productPrice\n        // })\n    }\n\n    const cancel = () => {\n        history.push('/dashboard');\n    }\n\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n    const filteredProduct = (event) => {\n        setSearchProduct(event.target.value);\n\n        if(filteredProductArray.length === 0){\n            setProductName('');\n        }else{\n            setProductName(filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1));\n            setProductPrice(filteredProductArray[0].price)\n        }\n    }\n\n    return(\n        <div className={`${styles.container}`}> \n            <ProductFilter filteredProduct={filteredProduct}/>\n            <div className={styles.center}>\n                <h1 className={styles.h1}>Update Product</h1>\n                <Formik\n                    initialValues={{ productName: '', price: ''}}\n                    validationSchema={AddProductSchema}\n                    validateOnBlur={false}\n                    validateOnMount={false}\n                    validateOnChange={false}\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\n                        setTimeout(() => {\n                            updateProduct()\n                             window.alert(\"Product Updated!\")\n                            resetForm({values: ''});\n                            setProductName('');\n                            setProductPrice('');\n                            setSubmitting(false);\n                        }, 100);\n                    }}\n                >\n                    {({isSubmitting, errors, touched})=>(\n                    <Form>\n                        <label className={styles.label}>Product Name</label>\n                        <Field \n                        onKeyUp={(event) => {setProductName(event.target.value.toLowerCase())}} \n                        readOnly\n                        name=\"productName\"\n                        id=\"productname\"\n                        value={productName}\n                        className={`${styles.input}`}/>\n                        {\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <Field \n                        onKeyUp={(event) => {setProductPrice(event.target.value)}} \n                        readOnly\n                        type=\"number\" \n                        name=\"price\" \n                        id=\"price\"\n                        value={productPrice}\n                        className={`${styles.input}`}/>\n                        {\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\n                        }\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                            Update\n                        </button>\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </Form>\n                    \n                    )}\n                    \n                </Formik>\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}