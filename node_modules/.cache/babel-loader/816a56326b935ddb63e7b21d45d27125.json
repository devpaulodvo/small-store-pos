{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport styles from './NewProduct.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProduct = () => {\n  _s();\n\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  const addProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/api/insert\", {\n      productName: productName,\n      price: productPrice\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          productName: '',\n          price: ''\n        },\n        validationSchema: AddProductSchema,\n        validateOnBlur: false,\n        validateOnChange: false,\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          if (!values) {\n            console.log(\"Eyy\");\n          } else {\n            // setTimeout(() => {\n            //     addProduct()\n            //      window.alert(\"Product Added!\")\n            //     resetForm({values: ''});\n            //     setProductName('');\n            //     setProductPrice('');\n            //     setSubmitting(false);\n            // }, 100);\n            console.log(values);\n          }\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductName(event.target.value.toLowerCase());\n            },\n            type: \"text\",\n            name: \"productName\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), errors.productName && touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 70\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Product Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setProductPrice(event.target.value);\n            },\n            type: \"number\",\n            name: \"price\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), errors.price && touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.error,\n            children: errors.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 58\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: false,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button} ${styles.red}`,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewProduct, \"8hMDzejkHsRnH5jqGSGpruVUi0M=\");\n\n_c = NewProduct;\nexport default NewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js"],"names":["React","useState","Axios","Formik","Form","Field","ErrorMessage","AddProductSchema","styles","NewProduct","productName","setProductName","productPrice","setProductPrice","addProduct","result","post","price","container","center","h1","values","setSubmitting","resetForm","console","log","isSubmitting","errors","touched","label","event","target","value","toLowerCase","input","error","button","red"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\n\nimport styles from './NewProduct.module.css';\n\nconst NewProduct = () =>{\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    const addProduct = async () =>{\n         let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\n            productName: productName, \n            price: productPrice\n        })\n    }\n\n    return( \n        <div className={`${styles.container}`}> \n            <div className={styles.center}>\n                <h1 className={styles.h1}>Add Product</h1>\n                <Formik\n                    initialValues={{ productName: '', price: ''}}\n                    validationSchema={AddProductSchema}\n                    validateOnBlur={false}\n                    validateOnChange={false}\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\n                        if(!values){\n                            console.log(\"Eyy\")\n                        }\n                        else{\n                        // setTimeout(() => {\n                        //     addProduct()\n                        //      window.alert(\"Product Added!\")\n                        //     resetForm({values: ''});\n                        //     setProductName('');\n                        //     setProductPrice('');\n                        //     setSubmitting(false);\n                        // }, 100);\n                        console.log(values)\n                        }\n                    }}\n                >\n                    {({isSubmitting, errors, touched})=>(\n                    <Form>\n                        <label className={styles.label}>Product Name</label>\n                        <Field onKeyUp={(event) => {setProductName(event.target.value.toLowerCase())}} type=\"text\" name=\"productName\" className={`${styles.input}`}/>\n                        {\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <Field onKeyUp={(event) => {setProductPrice(event.target.value)}} type=\"number\" name=\"price\" className={`${styles.input}`}/>\n                        {\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\n                        }\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                            Submit\n                        </button>\n                        <button onSubmit={false} type=\"submit\" disabled={isSubmitting} className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </Form>\n                    )}\n                    \n                </Formik>\n            </div>\n        </div>\n    )\n}\n\nexport default NewProduct;"]},"metadata":{},"sourceType":"module"}