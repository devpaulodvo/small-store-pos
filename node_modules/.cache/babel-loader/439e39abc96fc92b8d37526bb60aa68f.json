{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = () => {\n  _s();\n\n  const history = useHistory();\n  const [searchProduct, setSearchProduct] = useState('');\n  const [products, getProducts] = useState([]);\n  const [productId, setProductId] = useState('');\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  const addProductSchema = AddProductSchema;\n  const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n  useEffect(() => {\n    myfunction();\n  }, []);\n\n  const myfunction = async () => {\n    let result = await Axios.get('http://localhost:3001/api/get');\n    getProducts(result.data);\n  };\n\n  const updateProduct = async () => {\n    let result = await Axios.post(\"http://localhost:3001/updateproduct\", {\n      productName: productName,\n      price: productPrice,\n      productId: productId\n    });\n    window.alert(result.data.message);\n    myfunction();\n  };\n\n  const cancel = () => {\n    history.push('/dashboard');\n  };\n\n  const filteredProduct = event => {\n    setSearchProduct(event.target.value);\n\n    if (filteredProductArray.length === 0) {\n      setProductName('');\n      setProductPrice('');\n    } else {\n      document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase() + filteredProductArray[0].productName.slice(1);\n      document.getElementById('price').value = filteredProductArray[0].price;\n      formik.initialValues.productName = filteredProductArray[0].productName.toLowerCase();\n      formik.initialValues.price = filteredProductArray[0].price;\n      setProductName(filteredProductArray[0].productName.toLowerCase());\n      setProductPrice(filteredProductArray[0].price);\n      setProductId(filteredProductArray[0].productId);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      productName: '',\n      price: ''\n    },\n    validationSchema: addProductSchema,\n    validateOnBlur: false,\n    validateOnMount: false,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setTimeout(() => {\n        updateProduct();\n        formik.resetForm();\n        setProductName('');\n        setProductPrice('');\n        setProductId('');\n        setSubmitting(false);\n      }, 100);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: [/*#__PURE__*/_jsxDEV(ProductFilter, {\n      filteredProduct: filteredProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.center,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.h1,\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            formik.handleChange({\n              initialValues: {\n                productName: e.target.value\n              }\n            });\n            setProductName(e.target.value);\n          },\n          name: \"productName\",\n          type: \"text\",\n          id: \"productname\" // value={formik.values.productName}\n          ,\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), formik.errors.productName && formik.touched.productName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: formik.errors.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 84\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          className: styles.label,\n          children: \"Product Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            formik.handleChange(e);\n            setProductPrice(e.target.value);\n          },\n          type: \"text\",\n          name: \"price\",\n          id: \"price\" // value={formik.values.price}\n          ,\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), formik.errors.price && formik.touched.price ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.error,\n          children: formik.errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 72\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: null,\n          disabled: formik.isSubmitting,\n          type: \"submit\",\n          className: `${styles.button}`,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => cancel(),\n          disabled: formik.isSubmitting,\n          type: \"submit\",\n          className: `${styles.button} ${styles.red}`,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"xJOJHuAshznaxQcdCk+SKFETDs4=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/UpdateProduct/UpdateProduct.js"],"names":["React","useState","useEffect","styles","Axios","Formik","Form","Field","ErrorMessage","useFormik","useHistory","AddProductSchema","ProductFilter","createRef","UpdateProduct","history","searchProduct","setSearchProduct","products","getProducts","productId","setProductId","productName","setProductName","productPrice","setProductPrice","addProductSchema","filteredProductArray","filter","product","includes","toLowerCase","myfunction","result","get","data","updateProduct","post","price","window","alert","message","cancel","push","filteredProduct","event","target","value","length","document","getElementById","charAt","toUpperCase","slice","formik","initialValues","validationSchema","validateOnBlur","validateOnMount","onSubmit","values","setSubmitting","resetForm","setTimeout","container","center","h1","handleSubmit","label","e","handleChange","input","errors","touched","error","isSubmitting","button","red"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport styles from './UpdateProduct.module.css';\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom'; \nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\nimport { createRef } from \"react\";\n\n\nconst UpdateProduct = () => {\n    const history = useHistory();\n    const [searchProduct, setSearchProduct] = useState('');\n    const [products, getProducts] = useState([]);\n    const [productId, setProductId] = useState('');\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n    const addProductSchema = AddProductSchema;\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\n\n    \n\n    useEffect(()=>{\n        myfunction()\n    },[]);\n\n    const myfunction = async () => {\n        let result = await Axios.get('http://localhost:3001/api/get')\n        getProducts(result.data);\n      }\n\n    const updateProduct = async () =>{\n         let result = await  Axios.post(\"http://localhost:3001/updateproduct\", {\n            productName: productName, \n            price: productPrice,\n            productId: productId,\n        })\n\n\n        window.alert(result.data.message)\n        myfunction()\n    }\n\n    const cancel = () => {\n        history.push('/dashboard');\n    }\n\n    \n\n    const filteredProduct = (event) => {\n        setSearchProduct(event.target.value);\n\n        if(filteredProductArray.length === 0){\n            setProductName('');\n            setProductPrice('');\n        }else{\n            document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\n            document.getElementById('price').value = filteredProductArray[0].price;\n            formik.initialValues.productName = filteredProductArray[0].productName.toLowerCase()\n            formik.initialValues.price= filteredProductArray[0].price;\n            setProductName(filteredProductArray[0].productName.toLowerCase());\n            setProductPrice(filteredProductArray[0].price);\n            setProductId(filteredProductArray[0].productId);\n        }\n    }\n\n    const formik = useFormik({\n        initialValues: { productName: '', price: ''},\n        validationSchema: addProductSchema,\n        validateOnBlur:false,\n        validateOnMount:false,\n        onSubmit: (values, {setSubmitting, resetForm}) => {\n\n            setTimeout(() => {\n                updateProduct()\n                formik.resetForm()\n                setProductName('');\n                setProductPrice('');\n                setProductId('')\n                setSubmitting(false);\n            }, 100);\n        },\n      });\n   \n\n    return(\n        <div className={`${styles.container}`}> \n            <ProductFilter filteredProduct={filteredProduct}/>\n            <div className={styles.center}>\n                <h1 className={styles.h1}>Update Product</h1>\n                    <form onSubmit={formik.handleSubmit}>\n                        <label className={styles.label}>Product Name</label>\n                        <input\n                        onChange={e =>{\n                            formik.handleChange({initialValues: {productName: e.target.value}})\n                            setProductName(e.target.value)\n                        }}\n                        name=\"productName\"\n                        type=\"text\"\n                        id=\"productname\" \n                        // value={formik.values.productName}\n                        className={`${styles.input}`}/>\n                        {\n                        formik.errors.productName && formik.touched.productName ? (<div className={styles.error}>{formik.errors.productName}</div>) : null\n                        }\n                         <label className={styles.label}>Product Price</label>\n                        <input\n                        onChange={e =>{\n                            formik.handleChange(e)\n                            setProductPrice(e.target.value)\n                        }}\n                        type=\"text\" \n                        name=\"price\" \n                        id=\"price\"\n                        // value={formik.values.price}\n                        className={`${styles.input}`}/>\n                        {\n                        formik.errors.price && formik.touched.price ? (<div className={styles.error}>{formik.errors.price}</div>) : null\n                        }\n                        <button \n                            onSubmit={null}\n                            disabled={formik.isSubmitting} \n                            type=\"submit\"  \n                            className={`${styles.button}`}>\n                            Update\n                        </button>\n                        <button onClick={()=>cancel()} disabled={formik.isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\n                            Cancel\n                        </button>\n                    </form>\n                    \n                    \n                {/* </Formik> */}\n            </div>\n        </div>\n    )\n}\n\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}