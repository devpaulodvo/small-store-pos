{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Route/ProtectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  isAuth: isAuth,\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 24\n        }, this);\n      } else {\n        /*#__PURE__*/\n        _jsxDEV(Redirect, {\n          to: {\n            pathname: 'localhost/login',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 17\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Route/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","isAuth","component","Component","rest","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,MAAM,EAAEA,MAAT;AAAiBC,EAAAA,SAAS,EAAEC,SAA5B;AAAuC,KAAGC;AAA1C,CAAD,KAAoD;AACvE,sBACI,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,IAAS;AAC9B,UAAGJ,MAAH,EAAU;AACN,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEK;AACD;AAAA,gBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACK,YAAAA,QAAQ,EAAE,iBAAX;AAA8BC,YAAAA,KAAK,EAAC;AAACC,cAAAA,IAAI,EAACH,KAAK,CAACI;AAAZ;AAApC;AAAd;AAAA;AAAA;AAAA;AAAA;AACH;AACJ;AAND;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;KAAMT,c;AAYN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\n\nconst ProtectedRoute = ({isAuth: isAuth, component: Component, ...rest}) =>{\n    return(\n        <Route {...rest} render={(props)=>{\n            if(isAuth){\n                return <Component />\n            }else{\n                <Redirect to={{pathname: 'localhost/login', state:{from:props.location}}}/>;\n            }\n        }}/>\n    )\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}