{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\nimport styles from './NewProduct.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProduct = () => {\n  _s();\n\n  const [productName, setProductName] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n\n  const addProduct = () => {\n    Axios.post(\"http://localhost:3001/api/insert\", {\n      prod_name: productName,\n      price: productPrice\n    }).then(() => {\n      alert(\"successful insert\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.container}`,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        productName: '',\n        price: ''\n      },\n      validationSchema: AddProductSchema,\n      validateOnBlur: false,\n      validateOnChange: false,\n      onSubmit: async (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setTimeout(async () => {\n          let result = await Axios.post(\"http://localhost:3001/login\", {\n            username: username,\n            password: password\n          }, {\n            withCredentials: true\n          });\n          localStorage.setItem(\"token\", result.data.token);\n          let isAuth = await Axios.get(\"http://localhost:3001/isUserAuth\", {\n            headers: {\n              \"x-access-token\": localStorage.getItem(\"token\")\n            }\n          });\n          console.log(isAuth.data);\n          dispatch(authUpdater(isAuth.data));\n          history.push('/dashboard');\n          setSubmitting(false);\n        }, 100);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewProduct, \"8hMDzejkHsRnH5jqGSGpruVUi0M=\");\n\n_c = NewProduct;\nexport default NewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Product/NewProduct/NewProduct.js"],"names":["React","useState","Axios","Formik","Form","Field","ErrorMessage","AddProductSchema","styles","NewProduct","productName","setProductName","productPrice","setProductPrice","addProduct","post","prod_name","price","then","alert","container","values","setSubmitting","resetForm","setTimeout","result","username","password","withCredentials","localStorage","setItem","data","token","isAuth","get","headers","getItem","console","log","dispatch","authUpdater","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AAEpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMa,UAAU,GAAG,MAAK;AACpBZ,IAAAA,KAAK,CAACa,IAAN,CAAW,kCAAX,EAA+C;AAC3CC,MAAAA,SAAS,EAAEN,WADgC;AAE3CO,MAAAA,KAAK,EAAEL;AAFoC,KAA/C,EAGGM,IAHH,CAGQ,MAAI;AACJC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,KALL;AAMH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAG,GAAEX,MAAM,CAACY,SAAU,EAApC;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AAAEV,QAAAA,WAAW,EAAE,EAAf;AAAmBO,QAAAA,KAAK,EAAE;AAA1B,OADnB;AAEI,MAAA,gBAAgB,EAAEV,gBAFtB;AAGI,MAAA,cAAc,EAAE,KAHpB;AAII,MAAA,gBAAgB,EAAE,KAJtB;AAKI,MAAA,QAAQ,EAAE,OAAOc,MAAP,EAAe;AAACC,QAAAA,aAAD;AAAgBC,QAAAA;AAAhB,OAAf,KAA8C;AACpDC,QAAAA,UAAU,CAAC,YAAY;AACnB,cAAIC,MAAM,GAAG,MAAMvB,KAAK,CAACa,IAAN,CAAW,6BAAX,EAA0C;AACzDW,YAAAA,QAAQ,EAAEA,QAD+C;AAEzDC,YAAAA,QAAQ,EAAEA;AAF+C,WAA1C,EAGhB;AAACC,YAAAA,eAAe,EAAE;AAAlB,WAHgB,CAAnB;AAKAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BL,MAAM,CAACM,IAAP,CAAYC,KAAzC;AAEA,cAAIC,MAAM,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAU,kCAAV,EACf;AAACC,YAAAA,OAAO,EAAE;AAAC,gCAAkBN,YAAY,CAACO,OAAb,CAAqB,OAArB;AAAnB;AAAV,WADe,CAAnB;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACF,IAAnB;AACAQ,UAAAA,QAAQ,CAACC,WAAW,CAACP,MAAM,CAACF,IAAR,CAAZ,CAAR;AACAU,UAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACApB,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH,SAdS,EAcP,GAdO,CAAV;AAeH;AArBL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CAzDD;;GAAMb,U;;KAAAA,U;AA2DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\n\nimport styles from './NewProduct.module.css';\n\nconst NewProduct = () =>{\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    const addProduct = () =>{\n        Axios.post(\"http://localhost:3001/api/insert\", {\n            prod_name: productName, \n            price: productPrice\n        }).then(()=>{\n                alert(\"successful insert\");\n            });\n    }\n\n    return( \n        <div className={`${styles.container}`}> \n            <Formik\n                initialValues={{ productName: '', price: ''}}\n                validationSchema={AddProductSchema}\n                validateOnBlur={false}\n                validateOnChange={false}\n                onSubmit={async (values, {setSubmitting, resetForm}) => {\n                    setTimeout(async () => {\n                        let result = await Axios.post(\"http://localhost:3001/login\", {\n                            username: username,\n                            password: password\n                        }, {withCredentials: true});\n                        \n                        localStorage.setItem(\"token\",result.data.token)\n\n                        let isAuth = await Axios.get(\"http://localhost:3001/isUserAuth\", \n                            {headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\n                        console.log(isAuth.data)\n                        dispatch(authUpdater(isAuth.data))\n                        history.push('/dashboard')\n                        setSubmitting(false);\n                    }, 100);\n                }}\n            ></Formik>\n        \n            {/* <form>\n                <label>Product Name</label>\n                <input \n                    type=\"text\" \n                    name=\"productName\" \n                    onChange={(event) => {setProductName(event.target.value.toLowerCase())}}\n                />\n                <label>Product Price</label>\n                <input \n                    type=\"text\"\n                    name=\"productPrice\" \n                    onChange={(event) => {setProductPrice(event.target.value.toLowerCase())}}\n                />\n                <Button onClick={addProduct}>Add Product</Button>\n            </form> */}\n        </div>\n    )\n}\n\nexport default NewProduct;"]},"metadata":{},"sourceType":"module"}