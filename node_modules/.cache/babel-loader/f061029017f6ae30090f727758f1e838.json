{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport styles from './Register.module.css';\nimport TextField from \"../../UI/TextField/TextField\";\nimport Button from \"../../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpassword, setCPassword] = useState('');\n\n  const sendPostRequest = async () => {\n    console.log(username);\n    console.log(password);\n    console.log(cpassword); // try {\n    //     const resp = await Axios.post(\"http://localhost:3001/register\", {\n    //         username: username,\n    //         password: password,\n    //     });\n    //     console.log(resp.data);\n    // } catch (err) {\n    //     // Handle Error Here\n    //     console.error(err);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.div,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setUsername(event.target.value);\n          },\n          type: \"email\",\n          name: \"email\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          onKeyUp: event => {\n            setPassword(event.target.value);\n          },\n          type: \"password\",\n          name: \"password\",\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onSubmit: sendPostRequest,\n          disabled: isSubmitting,\n          blue: true,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"s8p03RMVUu3UWzBp+obFhO4LKvo=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Register/Register.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","styles","TextField","Button","Register","props","username","setUsername","password","setPassword","cpassword","setCPassword","sendPostRequest","console","log","div","textAlign","email","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","form","event","target","value","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\n\nimport styles from './Register.module.css';\nimport TextField from \"../../UI/TextField/TextField\";\nimport Button from \"../../UI/Button/Button\";\n\nconst Register = (props) => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [cpassword, setCPassword] = useState(''); \n\n    const sendPostRequest = async () => {\n        console.log(username);\n        console.log(password);\n        console.log(cpassword);\n        // try {\n        //     const resp = await Axios.post(\"http://localhost:3001/register\", {\n        //         username: username,\n        //         password: password,\n        //     });\n        //     console.log(resp.data);\n        // } catch (err) {\n        //     // Handle Error Here\n        //     console.error(err);\n        // }\n    };\n\n    return(\n        <div className={styles.div}>\n            <h4 style={{textAlign: 'center'}}>Register</h4>\n            {/* <form className={styles.form}> */}\n                {/* <TextField onChange={(event) => {setUsername(event.target.value)}} label=\"Username\" type=\"input\"/>\n                <TextField onChange={(event) => {setPassword(event.target.value)}} label=\"Password\" type=\"password\"/>\n                <TextField onChange={(event) => {setCPassword(event.target.value)}} label=\"Confirm Password\" type=\"password\"/>\n                <Button onClick={sendPostRequest} blue>Register</Button> */}\n                {/* <Button>Register</Button> */}\n            {/* </form> */}\n            <Formik\n       initialValues={{ email: '', password: '' }}\n       validate={values => {\n         const errors = {};\n         if (!values.email) {\n           errors.email = 'Required';\n         } else if (\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n         ) {\n           errors.email = 'Invalid email address';\n         }\n         return errors;\n       }}\n       onSubmit={(values, { setSubmitting }) => {\n         setTimeout(() => {\n           alert(JSON.stringify(values, null, 2));\n           setSubmitting(false);\n         }, 400);\n       }}\n     >\n       {({ isSubmitting }) => (\n         <Form className={styles.form}>\n           <Field onKeyUp={(event) => {setUsername(event.target.value)}} type=\"email\" name=\"email\" className={`${styles.input}`}/>\n           <ErrorMessage name=\"email\" component=\"div\" />\n           <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\n           <ErrorMessage name=\"password\" component=\"div\" />\n           {/* <button onSubmit={sendPostRequest} type=\"submit\" disabled={isSubmitting}>\n             Submit\n           </button> */}\n           <Button onSubmit={sendPostRequest} disabled={isSubmitting} blue >Register</Button>\n         </Form>\n       )}\n     </Formik>\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}