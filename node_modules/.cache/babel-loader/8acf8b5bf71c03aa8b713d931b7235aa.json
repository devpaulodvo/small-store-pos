{"ast":null,"code":"var _jsxFileName = \"/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authUpdater, selectAuth } from \"../../slices/userDetailsSlice\";\nimport { LoginSchema } from \"../../Schemas/Schema\";\nimport styles from './Login.module.css';\nimport Header from \"../Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const selector = useSelector(selectAuth);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.div,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Welcome to Verna Store. Please Login.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: ''\n        },\n        validationSchema: LoginSchema,\n        validateOnBlur: false,\n        validateOnChange: false,\n        onSubmit: async (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(async () => {\n            let result = await Axios.post(\"http://localhost:3001/login\", {\n              username: username,\n              password: password\n            }, {\n              withCredentials: true\n            });\n            localStorage.setItem(\"token\", result.data.token);\n            let isAuth = await Axios.get(\"http://localhost:3001/isUserAuth\", {\n              headers: {\n                \"x-access-token\": localStorage.getItem(\"token\")\n              }\n            });\n            console.log(isAuth.data);\n            dispatch(authUpdater(isAuth.data));\n            console.log(selector);\n            setSubmitting(false);\n          }, 100);\n        },\n        children: ({\n          isSubmitting,\n          errors,\n          touched\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setUsername(event.target.value);\n            },\n            type: \"text\",\n            name: \"username\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), errors.username && touched.username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 61\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `${styles.label}`,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            onKeyUp: event => {\n              setPassword(event.target.value);\n            },\n            type: \"password\",\n            name: \"password\",\n            className: `${styles.input}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), errors.password && touched.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 61\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            onSubmit: null,\n            type: \"submit\",\n            disabled: isSubmitting,\n            className: `${styles.button}`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"mUgcCMOijXwtqmJlM/S1y94Fcio=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kururugi/Desktop/React Applications/my-barber/src/Components/Login/Login.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Axios","useHistory","useSelector","useDispatch","authUpdater","selectAuth","LoginSchema","styles","Header","Login","props","history","dispatch","selector","username","setUsername","password","setPassword","div","textAlign","values","setSubmitting","resetForm","setTimeout","result","post","withCredentials","localStorage","setItem","data","token","isAuth","get","headers","getItem","console","log","isSubmitting","errors","touched","form","label","event","target","value","input","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { authUpdater, selectAuth } from \"../../slices/userDetailsSlice\";\n\nimport { LoginSchema } from \"../../Schemas/Schema\";\nimport styles from './Login.module.css';\nimport Header from \"../Header/Header\";\n\nconst Login = (props) =>{\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const selector = useSelector(selectAuth);\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    return(\n        <React.Fragment>\n        <Header />\n        <div className={styles.div}>\n            <h4 style={{textAlign: 'center'}}>Welcome to Verna Store. Please Login.</h4>\n            <Formik\n             initialValues={{ username: '', password: ''}}\n             validationSchema={LoginSchema}\n             validateOnBlur={false}\n             validateOnChange={false}\n             onSubmit={async (values, {setSubmitting, resetForm}) => {\n                    setTimeout(async () => {\n                        let result = await Axios.post(\"http://localhost:3001/login\", {\n                            username: username,\n                            password: password\n                        }, {withCredentials: true});\n                        \n                        localStorage.setItem(\"token\",result.data.token)\n\n                        let isAuth = await Axios.get(\"http://localhost:3001/isUserAuth\", \n                            {headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\n                        console.log(isAuth.data)\n                        dispatch(authUpdater(isAuth.data))\n                        console.log(selector)\n                        setSubmitting(false);\n                    }, 100);\n            }}\n            >\n            {({isSubmitting, errors, touched})=>(\n                <Form className={styles.form}>\n                    <label className={`${styles.label}`}>Username</label>\n                    <Field onKeyUp={(event) => {setUsername(event.target.value)}} type=\"text\" name=\"username\" className={`${styles.input}`}/>\n                    {\n                     errors.username && touched.username ? (<div>{errors.username}</div>) : null\n                    }\n                    <label className={`${styles.label}`}>Password</label>\n                    <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\n                    {\n                     errors.password && touched.password ? (<div>{errors.password}</div>) : null\n                    }\n                    <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\n                        Submit\n                    </button>\n                </Form>\n            )}\n            </Formik>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}