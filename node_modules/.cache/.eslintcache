[{"F:\\React Applications\\my-barber\\src\\index.js":"1","F:\\React Applications\\my-barber\\src\\App.js":"2","F:\\React Applications\\my-barber\\src\\app\\store.js":"3","F:\\React Applications\\my-barber\\src\\slices\\cartDetailsSlice.js":"4","F:\\React Applications\\my-barber\\src\\slices\\userDetailsSlice.js":"5","F:\\React Applications\\my-barber\\src\\Components\\Login\\Login.js":"6","F:\\React Applications\\my-barber\\src\\Components\\Register\\Register.js":"7","F:\\React Applications\\my-barber\\src\\Components\\AdminDashboard\\AdminDashboard.js":"8","F:\\React Applications\\my-barber\\src\\Components\\Route\\ProtectedRoute.js":"9","F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\ProductList.js":"10","F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\ProductItem.js":"11","F:\\React Applications\\my-barber\\src\\Components\\Account\\Account.js":"12","F:\\React Applications\\my-barber\\src\\Components\\Payment\\Payment.js":"13","F:\\React Applications\\my-barber\\src\\Components\\Product\\ManageProductMenu.js":"14","F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\ProductFilter.js":"15","F:\\React Applications\\my-barber\\src\\Schemas\\Schema.js":"16","F:\\React Applications\\my-barber\\src\\Components\\Header\\Header.js":"17","F:\\React Applications\\my-barber\\src\\Components\\Inventory\\Inventory.js":"18","F:\\React Applications\\my-barber\\src\\Components\\Product\\NewProduct\\NewProduct.js":"19","F:\\React Applications\\my-barber\\src\\Components\\Product\\UpdateProduct\\UpdateProduct.js":"20","F:\\React Applications\\my-barber\\src\\Components\\Product\\DeleteProduct\\DeleteProduct.js":"21","F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\EnterCustomer\\EnterCustomer.js":"22","F:\\React Applications\\my-barber\\src\\Components\\Cart\\ViewCart.js":"23","F:\\React Applications\\my-barber\\src\\UI\\NavBar\\NavBar.js":"24","F:\\React Applications\\my-barber\\src\\UI\\Button\\Button.js":"25","F:\\React Applications\\my-barber\\src\\UI\\TextField\\TextField.js":"26"},{"size":339,"mtime":1632667927883,"results":"27","hashOfConfig":"28"},{"size":1553,"mtime":1641466381774,"results":"29","hashOfConfig":"28"},{"size":322,"mtime":1641466381788,"results":"30","hashOfConfig":"28"},{"size":1059,"mtime":1641836328318,"results":"31","hashOfConfig":"28"},{"size":843,"mtime":1641466381789,"results":"32","hashOfConfig":"28"},{"size":3527,"mtime":1642107746627,"results":"33","hashOfConfig":"28"},{"size":7294,"mtime":1641466381785,"results":"34","hashOfConfig":"28"},{"size":2635,"mtime":1642107866701,"results":"35","hashOfConfig":"28"},{"size":491,"mtime":1641466381786,"results":"36","hashOfConfig":"28"},{"size":3295,"mtime":1642082499773,"results":"37","hashOfConfig":"28"},{"size":2859,"mtime":1642106505845,"results":"38","hashOfConfig":"28"},{"size":269,"mtime":1633659098351,"results":"39","hashOfConfig":"28"},{"size":3842,"mtime":1642427895070,"results":"40","hashOfConfig":"28"},{"size":791,"mtime":1642333796157,"results":"41","hashOfConfig":"28"},{"size":509,"mtime":1641656702183,"results":"42","hashOfConfig":"28"},{"size":1238,"mtime":1641649468808,"results":"43","hashOfConfig":"28"},{"size":1078,"mtime":1641466381776,"results":"44","hashOfConfig":"28"},{"size":3276,"mtime":1641466381777,"results":"45","hashOfConfig":"28"},{"size":4774,"mtime":1641913617342,"results":"46","hashOfConfig":"28"},{"size":5657,"mtime":1641466381782,"results":"47","hashOfConfig":"28"},{"size":2302,"mtime":1641466381779,"results":"48","hashOfConfig":"28"},{"size":667,"mtime":1642344690912,"results":"49","hashOfConfig":"28"},{"size":3941,"mtime":1642086303250,"results":"50","hashOfConfig":"28"},{"size":2892,"mtime":1641650776059,"results":"51","hashOfConfig":"28"},{"size":375,"mtime":1632151441966,"results":"52","hashOfConfig":"28"},{"size":539,"mtime":1641466381788,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"5a4zai",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"F:\\React Applications\\my-barber\\src\\index.js",[],["120","121"],"F:\\React Applications\\my-barber\\src\\App.js",["122","123"],"import './App.css';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Axios from \"axios\";\r\nimport ProductList from './Components/Product/ViewProducts/ProductList';\r\nimport Login from './Components/Login/Login';\r\nimport Register from './Components/Register/Register';\r\nimport React, { useEffect }  from 'react';\r\nimport AdminDashboard from './Components/AdminDashboard/AdminDashboard';\r\nimport ProtectedRoute from './Components/Route/ProtectedRoute';\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport { authUpdater, selectAuth } from \"./slices/userDetailsSlice\";\r\n\r\n\r\nfunction App() {\r\n  const isAuth = useSelector(selectAuth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect( async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if(token !== null){\r\n      let result = await Axios.get(\"http://localhost:3001/isUserAuth\", \r\n      {headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\r\n      console.log(result)\r\n      dispatch(authUpdater(result.data))\r\n    }\r\n    \r\n  },[])\r\n\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <React.Fragment>\r\n              <Route path={[\"/login\"]} component={Login}/>\r\n              <Route exact path={[\"/register\"]} component={Register}/>\r\n              <Route exact path={[\"/\", \"/store\"]} component={ProductList}/>\r\n              <ProtectedRoute path={[\"/dashboard\"]} pathname={'/login'} component={AdminDashboard} isAuth={isAuth}/>\r\n          </React.Fragment>\r\n        </Switch>\r\n      </Router>\r\n  );\r\n }\r\n\r\nexport default App;\r\n\r\n\r\n","F:\\React Applications\\my-barber\\src\\app\\store.js",[],"F:\\React Applications\\my-barber\\src\\slices\\cartDetailsSlice.js",[],"F:\\React Applications\\my-barber\\src\\slices\\userDetailsSlice.js",[],"F:\\React Applications\\my-barber\\src\\Components\\Login\\Login.js",["124","125"],"import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Axios from \"axios\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { authUpdater, selectAuth } from \"../../slices/userDetailsSlice\";\r\n\r\nimport { LoginSchema } from \"../../Schemas/Schema\";\r\nimport styles from './Login.module.css';\r\nimport Header from \"../Header/Header\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Login = (props) =>{\r\n\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const selector = useSelector(selectAuth);\r\n    \r\n    useEffect(async()=>{\r\n        if(selector){\r\n            await history.push('/dashboard')\r\n        }\r\n    })\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <Header />\r\n        <div className={styles.div}>\r\n            <h4 style={{textAlign: 'center'}}>Welcome to Verna Store. Please Login.</h4>\r\n            <Formik\r\n             initialValues={{ username: '', password: ''}}\r\n             validationSchema={LoginSchema}\r\n             validateOnBlur={false}\r\n             validateOnChange={false}\r\n             onSubmit={async (values, {setSubmitting}) => {\r\n                    setTimeout(async () => {\r\n                        let result = await Axios.post(\"http://localhost:3001/login\", {\r\n                            username: username,\r\n                            password: password\r\n                        }, {withCredentials: true});\r\n\r\n                        console.log(result);\r\n                        if(!result.data){\r\n                            window.alert(\"Invalid Login\");\r\n                        }\r\n                        else{\r\n                            localStorage.setItem(\"token\",result.data.token)\r\n\r\n                        let isAuth = await Axios.get(\"http://localhost:3001/isUserAuth\", \r\n                            {headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\r\n                        console.log(isAuth.data)\r\n                        dispatch(authUpdater(isAuth.data))\r\n                        history.push('/dashboard')\r\n                        setSubmitting(false);\r\n                        }\r\n                    }, 100);\r\n            }}\r\n            >\r\n            {({isSubmitting, errors, touched})=>(\r\n                <Form className={styles.form}>\r\n                    <label className={`${styles.label}`}>Username</label>\r\n                    <Field onKeyUp={(event) => {setUsername(event.target.value)}} type=\"text\" name=\"username\" className={`${styles.input}`}/>\r\n                    {\r\n                     errors.username && touched.username ? (<div>{errors.username}</div>) : null\r\n                    }\r\n                    <label className={`${styles.label}`}>Password</label>\r\n                    <Field onKeyUp={(event) => {setPassword(event.target.value)}} type=\"password\" name=\"password\" className={`${styles.input}`}/>\r\n                    {\r\n                     errors.password && touched.password ? (<div>{errors.password}</div>) : null\r\n                    }\r\n                    <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\r\n                        Submit\r\n                    </button>\r\n                </Form>\r\n            )}\r\n            </Formik>\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(Login);","F:\\React Applications\\my-barber\\src\\Components\\Register\\Register.js",["126","127","128"],"import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport Axios from \"axios\";\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport styles from './Register.module.css';\r\nimport Header from \"../Header/Header\";\r\n\r\nconst Register = (props) => {\r\n    \r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstname, setFirstname] = useState('');\r\n    const [middlename, setMiddlename] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [cpassword1, setCPassword] = useState('');\r\n\r\n    let registerSchema = Yup.object().shape({\r\n        username: Yup.string().min(5, \"Username must be 5 characters long\").required('Required Username')\r\n        .test(\"is_exists\", \"Not Available\", (value)=>{\r\n            return new Promise((resolve, reject)=>{\r\n               setTimeout(async()=>{\r\n                try{\r\n                    let result = await Axios.post(\"http://localhost:3001/checkusername\", {\r\n                        username: username,\r\n                        password: password\r\n                    }, {headers: {'Content-Type': 'application/json'}})\r\n                   if(value === result.data.username){\r\n                        resolve(false)\r\n                    }else{\r\n                        resolve(true)\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n               }, 500)\r\n               \r\n            })\r\n        })\r\n        ,\r\n        password: Yup.string().min(6, \"Must be 6 or more characters\").required('Required Password'),\r\n        cpassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match').required('Required Confirm Password'),\r\n        firstname: Yup.string().required('Required Firstname'),\r\n        middlename: Yup.string().required('Required Middlename'),\r\n        lastname: Yup.string().required('Required Lastname')\r\n    });\r\n\r\n    const sendPostRequest = async () => {\r\n        try{\r\n        let result = await Axios.post(\"http://localhost:3001/register\", {\r\n        username: username,\r\n        password: password,\r\n        fn: firstname,\r\n        mn: middlename,\r\n        ln: lastname,\r\n        }, {\r\n            headers: {'Content-Type': 'application/json'}\r\n        });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <Header/>\r\n        <div className={styles.div}>\r\n            <h4 style={{textAlign: 'center'}}>Register</h4>\r\n            <Formik\r\n                initialValues={{ username: '', password: '', cpassword:'', firstname: '', middlename: '', lastname:'' }}\r\n                validationSchema={registerSchema}\r\n                onSubmit={async (values, {setSubmitting, resetForm }) => {\r\n                        setTimeout(() => {\r\n                            sendPostRequest()\r\n                            window.alert(\"Client Registered\")\r\n                            resetForm({values: ''});\r\n                            setPassword('');\r\n                            setUsername('');\r\n                            setFirstname('');\r\n                            setMiddlename('');\r\n                            setLastname('');\r\n                            setSubmitting(false);\r\n                        }, 100);\r\n                }}\r\n                >\r\n                {({ isSubmitting, errors, touched, status }) => (\r\n                    <Form className={styles.form}>\r\n                        <label className={`${styles.label}`}>Firstname</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setFirstname(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"firstname\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.firstname && touched.firstname ? (<div>{errors.firstname}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Middlename</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setMiddlename(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"middlename\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.middlename && touched.middlename ? (<div>{errors.middlename}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Lastname</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setLastname(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"lastname\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.lastname && touched.lastname ? (<div>{errors.lastname}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Username</label>\r\n                        <Field  \r\n                            onKeyUp={(event) => {\r\n                                setUsername(event.target.value)\r\n                            }} \r\n                            type=\"text\" \r\n                            name=\"username\" \r\n                            className={`${styles.input}`}\r\n                        />\r\n                        {\r\n                        errors.username && touched.username ? (<div>{errors.username}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Password</label>\r\n                        <Field \r\n                            onKeyUp={(event) => {setPassword(event.target.value)}} \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            className={`${styles.input}`}/>\r\n                        {\r\n                        errors.password && touched.password ? (<div>{errors.password}</div>) : null\r\n                        }\r\n                        <label className={`${styles.label}`}>Confirm Password</label>\r\n                        <Field \r\n                            onKeyUp={(event) => {setCPassword(event.target.value)}} \r\n                            type=\"password\" \r\n                            name=\"cpassword\" \r\n                            className={`${styles.input}`}/>\r\n                        {\r\n                        errors.cpassword && touched.cpassword ? (<div>{errors.cpassword}</div>) : null\r\n                        }\r\n                        \r\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\r\n                            Submit\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Register;","F:\\React Applications\\my-barber\\src\\Components\\AdminDashboard\\AdminDashboard.js",["129","130","131","132","133"],"import React from \"react\";\r\nimport {Route, Switch, useRouteMatch, Link } from 'react-router-dom'; \r\n\r\nimport NewProduct from \"../Product/NewProduct/NewProduct\";\r\nimport UpdateProduct from \"../Product/UpdateProduct/UpdateProduct\"\r\nimport Inventory from \"../Inventory/Inventory\";\r\nimport Payment from \"../Payment/Payment\";\r\nimport Account from \"../Account/Account\";\r\nimport NavBar from \"../../UI/NavBar/NavBar\";\r\nimport ManageProductMenu from \"../Product/ManageProductMenu\";\r\n\r\nimport styles from './AdminDashboard.module.css';\r\nimport { withRouter } from \"react-router\";\r\nimport DeleteProduct from \"../Product/DeleteProduct/DeleteProduct\";\r\n\r\nconst AdminDashboard = (props) =>{\r\n    let { path, url } = useRouteMatch();\r\n    const navbar = [\r\n        {\r\n            id_num:1,\r\n            id: \"manage-products\",\r\n            path: '/manage-products',\r\n            li: \"Manage Products\",\r\n        },\r\n        {\r\n            id_num:2,\r\n            id: \"manage-inventory\",\r\n            path: '/manage-inventory',\r\n            li: \"Manage Inventory\",\r\n        },\r\n        {\r\n            id_num:3,\r\n            id: \"manage-payments\",\r\n            path: '/manage-payments',\r\n            li: \"Manage Payments\",\r\n        },\r\n        {\r\n            id_num:4,\r\n            id: \"manage-accounts\",\r\n            path: '/manage-accounts',\r\n            li: \"Manage Accounts\",\r\n        },\r\n    ]\r\n\r\nreturn(   \r\n\r\n            <div className={`${styles.container}`}>\r\n                <NavBar/>\r\n                <Switch>\r\n                    <Route exact path={[\"/dashboard\", \"/dashboard/manage-products\"]}>\r\n                        <ManageProductMenu/>\r\n                    </Route>\r\n                        <Route exact path={[\"/dashboard/manage-products/add-product\", \"/dashboard/add-product\"]}>\r\n                            <NewProduct></NewProduct>\r\n                        </Route>\r\n                        <Route exact path={[\"/dashboard/manage-products/update-product\", \"/dashboard/update-product\"]}>\r\n                            <UpdateProduct/>\r\n                        </Route>\r\n                        <Route exact path={[\"/dashboard/manage-products/delete-product\", \"/dashboard/delete-product\"]}>\r\n                             <Inventory/>\r\n                        </Route>\r\n                    <Route exact path=\"/dashboard/manage-payments\">\r\n                        <Payment/>\r\n                    </Route>\r\n                    <Route exact path=\"/dashboard/manage-accounts\">\r\n                        <Account/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n)\r\n}\r\n\r\nexport default withRouter(AdminDashboard);","F:\\React Applications\\my-barber\\src\\Components\\Route\\ProtectedRoute.js",["134","135"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\nconst ProtectedRoute = ({isAuth: isAuth, component: Component, pathname: pathname, ...rest}) =>{\r\n    return(\r\n        <Route \r\n        {...rest} \r\n        render={(props)=>{\r\n            if(isAuth){\r\n                return <Component />\r\n            }else{\r\n                return <Redirect to={{pathname, state:{from:props.location}}}/>;\r\n            }\r\n        }}/>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\ProductList.js",[],"F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\ProductItem.js",[],"F:\\React Applications\\my-barber\\src\\Components\\Account\\Account.js",["136","137"],"import React, { useEffect, useState }  from \"react\";\r\n\r\n\r\nimport styles from './Account.module.css';\r\n\r\nconst Account = (props) =>{\r\n\r\n    return(\r\n        <div className={`${styles.container}`}>\r\n            Account\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account;","F:\\React Applications\\my-barber\\src\\Components\\Payment\\Payment.js",["138","139","140","141","142"],"F:\\React Applications\\my-barber\\src\\Components\\Product\\ManageProductMenu.js",["143","144","145","146","147"],"import { isRejected } from \"@reduxjs/toolkit\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Link, Route, Switch, useRouteMatch } from 'react-router-dom'; \r\nimport styles from './ManageProductMenu.module.css';\r\n\r\nconst ManageProductMenu = () =>{\r\n    let { path, url } = useRouteMatch();\r\n    return(\r\n        <div className={`${styles.container}`}>\r\n            <ul className={`${styles.nav}`}>\r\n                <Link className={`${styles.li}`} to={`${url}/add-product`}>Add Product</Link>\r\n                <Link className={`${styles.li}`} to={`${url}/update-product`}>Update Product</Link>\r\n                <Link className={`${styles.li}`} to={`${url}/delete-product`}>Delete Product</Link>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageProductMenu;","F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\ProductFilter.js",["148"],"import React, { useState } from \"react\";\r\n\r\nimport styles from './ProductFilter.module.css'\r\n\r\nconst ProductFilter = ({filteredProduct}) =>{\r\n\r\n    const productFilter = (event) =>{\r\n        filteredProduct(event)\r\n    }\r\n\r\n    return(\r\n        <div className={`${styles.wrap}`}>\r\n                <input type=\"text\" id=\"search\" className={`${styles.search}`} placeholder=\"Search Product\"\r\n                onChange={(event) => productFilter(event)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductFilter;","F:\\React Applications\\my-barber\\src\\Schemas\\Schema.js",[],"F:\\React Applications\\my-barber\\src\\Components\\Header\\Header.js",[],"F:\\React Applications\\my-barber\\src\\Components\\Inventory\\Inventory.js",[],"F:\\React Applications\\my-barber\\src\\Components\\Product\\NewProduct\\NewProduct.js",["149","150","151"],"import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport * as Yup from 'yup';\r\n// import { AddProductSchema } from \"../../../Schemas/Schema\";\r\n\r\nimport styles from './NewProduct.module.css';\r\nimport ManageProductMenu from \"../ManageProductMenu\";\r\n\r\nconst NewProduct = () =>{\r\n    const history = useHistory();\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState('');\r\n\r\n    let addProductSchema = Yup.object().shape({\r\n        productName: Yup.string().min(5, \"Product Name must be 5 characters long\").required('Product Name Required')\r\n        .test(\"is_exists\", \"Product Already Exists\", ()=>{\r\n            return new Promise((resolve, reject)=>{\r\n               setTimeout(async()=>{\r\n                try{\r\n                    let result = await Axios.post(\"http://localhost:3001/selectusers\", {\r\n                        productName: productName,\r\n                    }, {\r\n                        headers: {'Content-Type': 'application/json'}\r\n                    });\r\n                   if(result.data.productName){\r\n                       console.log(result.data.productName)\r\n                        resolve(false)\r\n                    }else{\r\n                        console.log(result.data.productName)\r\n                        resolve(true)\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n               }, 100)\r\n               \r\n            })\r\n        }),\r\n        price: Yup.number().required(\"Price Required\")\r\n        .test(\r\n            'Is positive?',\r\n            'The number must be greater than 0!',\r\n            (value) => value > 0\r\n         )\r\n\r\n    })\r\n\r\n    const addProduct = async () =>{\r\n        console.log(\"product submitted\")\r\n         let result = await  Axios.post(\"http://localhost:3001/api/insert\", {\r\n            productName: productName.toLowerCase(),\r\n            price: productPrice\r\n        },{headers: {\"x-access-token\": localStorage.getItem(\"token\")}});\r\n\r\n        window.alert(\"Product Already Exists!\")\r\n        if(result == 0){\r\n            window.alert(\"Product Already Exists!\")\r\n        }\r\n        else{  \r\n            window.alert(\"Product Added!\")\r\n        }\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/dashboard');\r\n    }\r\n\r\n    return( \r\n        <div className={`${styles.container}`}>\r\n            <div className={styles.center}>\r\n                <h1 className={styles.h1}>Add Product</h1>\r\n                <Formik\r\n                    initialValues={{ productName: '', price: ''}}\r\n                    validationSchema={addProductSchema}\r\n                    validateOnChange={false}\r\n                    onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                        setTimeout(() => {\r\n                            addProduct()\r\n                            resetForm({values: ''});\r\n                            setProductName('');\r\n                            setProductPrice('');\r\n                            setSubmitting(false);\r\n                        }, 100);\r\n                    }}\r\n                >\r\n                    {({isSubmitting, errors, touched})=>(\r\n                    <Form>\r\n                        <label className={styles.label}>Product Name</label>\r\n                        <Field onKeyUp={(event) => {setProductName(event.target.value)}} type=\"text\" name=\"productName\" className={`${styles.input}`}/>\r\n                        {\r\n                        errors.productName && touched.productName ? (<div className={styles.error}>{errors.productName}</div>) : null\r\n                        }\r\n                         <label className={styles.label}>Product Price</label>\r\n                        <Field onKeyUp={(event) => {setProductPrice(event.target.value)}} type=\"number\" name=\"price\" className={`${styles.input}`}/>\r\n                        {\r\n                        errors.price && touched.price ? (<div className={styles.error}>{errors.price}</div>) : null\r\n                        }\r\n                        <button onSubmit={null} type=\"submit\" disabled={isSubmitting} className={`${styles.button}`}>\r\n                            Submit\r\n                        </button>\r\n                        <button onClick={()=>cancel()} disabled={isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\r\n                            Cancel\r\n                        </button>\r\n                    </Form>\r\n                    \r\n                    )}\r\n                    \r\n                </Formik>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProduct;","F:\\React Applications\\my-barber\\src\\Components\\Product\\UpdateProduct\\UpdateProduct.js",["152","153","154","155","156"],"import React, {useState, useEffect} from \"react\";\r\nimport styles from './UpdateProduct.module.css';\r\nimport Axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage, useFormik } from 'formik';\r\nimport { useHistory } from 'react-router-dom'; \r\nimport { AddProductSchema } from \"../../../Schemas/Schema\";\r\nimport ProductFilter from \"../ViewProducts/ProductFilter\";\r\nimport { createRef } from \"react\";\r\n\r\n\r\nconst UpdateProduct = () => {\r\n    const history = useHistory();\r\n    const [searchProduct, setSearchProduct] = useState('');\r\n    const [products, getProducts] = useState([]);\r\n    const [productId, setProductId] = useState('');\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState('');\r\n    const addProductSchema = AddProductSchema;\r\n    const filteredProductArray = products.filter(product => product.productName.includes(searchProduct.toLowerCase()));\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        myfunction()\r\n    },[]);\r\n\r\n    const myfunction = async () => {\r\n        let result = await Axios.get('http://localhost:3001/api/getall')\r\n        getProducts(result.data);\r\n      }\r\n\r\n    const updateProduct = async () =>{\r\n         let result = await  Axios.post(\"http://localhost:3001/updateproduct\", {\r\n            productName: productName.toLowerCase(), \r\n            price: productPrice,\r\n            productId: productId,\r\n        })\r\n\r\n\r\n        window.alert(result.data.message)\r\n        myfunction()\r\n    }\r\n\r\n    const cancel = () => {\r\n        history.push('/dashboard');\r\n    }\r\n\r\n    \r\n\r\n    const filteredProduct = (event) => {\r\n        setSearchProduct(event.target.value);\r\n\r\n        if(filteredProductArray.length === 0){\r\n            setProductName('');\r\n            setProductPrice('');\r\n        }else{\r\n            // document.getElementById('productname').value = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\r\n            // document.getElementById('price').value = filteredProductArray[0].price;\r\n            formik.initialValues.productName = filteredProductArray[0].productName.charAt(0).toUpperCase()+filteredProductArray[0].productName.slice(1)\r\n            formik.initialValues.price = filteredProductArray[0].price;\r\n            setProductName(filteredProductArray[0].productName);\r\n            setProductPrice(filteredProductArray[0].price);\r\n            setProductId(filteredProductArray[0].productId);\r\n        }\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {productName: '', price: ''},\r\n        validationSchema: addProductSchema,\r\n        validateOnBlur:false,\r\n        validateOnMount:false,\r\n        onSubmit: (values, {setSubmitting}) => {\r\n            setTimeout(() => {\r\n                updateProduct()\r\n                formik.initialValues.productName = '';\r\n                formik.initialValues.price = '';\r\n                setProductName('');\r\n                setProductPrice('');\r\n                setProductId('');\r\n                setSubmitting(false);\r\n            }, 100);\r\n        },\r\n      });\r\n   \r\n\r\n    return(\r\n        <div className={`${styles.container}`}> \r\n            <ProductFilter filteredProduct={filteredProduct}/>\r\n            <div className={styles.center}>\r\n                <h1 className={styles.h1}>Update Product</h1>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <label className={styles.label}>Product Name</label>\r\n                        <input\r\n                        onChange={e =>{\r\n                            formik.values.productName = e.target.value\r\n                            setProductName(e.target.value)\r\n                        }}\r\n                        name=\"productName\"\r\n                        type=\"text\"\r\n                        id=\"productname\" \r\n                        value={formik.values.productName.charAt(0).toUpperCase()+formik.values.productName.slice(1)}\r\n                        className={`${styles.input}`}/>\r\n                        {\r\n                        formik.errors.productName && formik.touched.productName ? (<div className={styles.error}>{formik.errors.productName}</div>) : null\r\n                        }\r\n                         <label className={styles.label}>Product Price</label>\r\n                        <input\r\n                        onChange={e =>{\r\n                            formik.values.price = e.target.value\r\n                            setProductPrice(e.target.value)\r\n                        }}\r\n                        type=\"number\" \r\n                        name=\"price\" \r\n                        id=\"price\"\r\n                        value={formik.values.price}\r\n                        className={`${styles.input}`}/>\r\n                        {\r\n                        formik.errors.price && formik.touched.price ? (<div className={styles.error}>{formik.errors.price}</div>) : null\r\n                        }\r\n                        <button \r\n                            onSubmit={null}\r\n                            disabled={formik.isSubmitting} \r\n                            type=\"submit\"  \r\n                            className={`${styles.button}`}>\r\n                            Update\r\n                        </button>\r\n                        <button onClick={()=>cancel()} disabled={formik.isSubmitting} type=\"submit\" className={`${styles.button} ${styles.red}`}>\r\n                            Cancel\r\n                        </button>\r\n                    </form>\r\n                    \r\n                    \r\n                {/* </Formik> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct;","F:\\React Applications\\my-barber\\src\\Components\\Product\\DeleteProduct\\DeleteProduct.js",[],"F:\\React Applications\\my-barber\\src\\Components\\Product\\ViewProducts\\EnterCustomer\\EnterCustomer.js",["157","158","159"],"import React, { useState } from \"react\";\r\nimport styles from './EnterCustomer.module.css';\r\nimport Axios from \"axios\";\r\n\r\nimport TextField from '../../../../UI/TextField/TextField';\r\n\r\nconst EnterCustomer = ({userIdGetter}) => {\r\n\r\n    const enterCustomer = (event) => {\r\n        userIdGetter(event)\r\n    }\r\n\r\n    return(\r\n        <div className={`${styles.container}`}>\r\n            <h1 className={`${styles.h1}`}>Enter Customer ID</h1>\r\n            <TextField onKeyDown={(e)=>{\r\n                if(e.code == \"Enter\"){\r\n                    enterCustomer(e.target.value);\r\n                }\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnterCustomer;","F:\\React Applications\\my-barber\\src\\Components\\Cart\\ViewCart.js",["160","161","162"],"import React, { useEffect, useState} from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Axios from \"axios\";\r\nimport { selectOrders, selectUserId, deleteOrder, orderUpdater, useridUpdater} from \"../../slices/cartDetailsSlice\";\r\nimport styles from './ViewCart.module.css';\r\nimport cart from '../../img/trolley.png';\r\nimport moment from \"moment\";\r\n\r\nconst ViewCart = () => {\r\n    const dispatch = useDispatch()\r\n    const orderSelector = useSelector(selectOrders);\r\n    const [total, setTotal] = useState(0);\r\n    const userDetail = useSelector(selectUserId);\r\n    const [view, setView] = useState(false);\r\n    useEffect(() => {\r\n        let x = 0;\r\n        orderSelector.map((orders)=>{\r\n            console.log(orders.price);\r\n            x = x + (orders.price * orders.countProduct);\r\n        })\r\n        setTotal(x);\r\n    }, [orderSelector])\r\n\r\n    const orderRemover = (index) => {\r\n        dispatch(deleteOrder(index));\r\n    }\r\n\r\n    const checkout = async () => {\r\n        await Axios.post(\"http://localhost:3001/checkout\", {\r\n            userid: userDetail.userid,\r\n            orders: orderSelector,\r\n            datepurchased: moment().format(),\r\n        });\r\n        window.alert(\"Transaction Completed\");\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className={`${styles.container}`} onClick={()=>setView(true)}>\r\n                    <div className={`${styles.ncontainer}`}>\r\n                        <div className={`${styles.ordercount}`}>{orderSelector.length}</div>\r\n                    </div>\r\n                    <img src={cart} alt='cart' className={`${styles.cart}`} /> \r\n                </div>\r\n            {!view \r\n            ? \r\n                null\r\n            :\r\n                <div className={`${styles.overlay}`} onClick={()=>setView(false)}>\r\n                    <div className={`${styles.viewcart}`} onClick={(e) => e.stopPropagation()}\r\n                    id='viewcart'> \r\n                        <span>Customer: {userDetail.fn} {userDetail.ln}</span>\r\n                        <span>Date: {moment().format('LL')}</span>\r\n                    {orderSelector.length !== 0 ?\r\n                    <div className={`${styles.vieworders}`}>\r\n                    <ul className={`${styles.orderlistheader}`}>\r\n                        <li>Quantity</li>\r\n                        <li>Product</li>\r\n                        <li>Price</li>\r\n                        <li>Total</li>\r\n                        <li>Edit</li>\r\n                    </ul>\r\n                    {orderSelector.map((orders) => (\r\n                    <ul className={`${styles.orderlist}`} key={orders.index}>\r\n                        <li>{orders.countProduct}</li>\r\n                        <li>{orders.productName}</li>\r\n                        <li>P{orders.price}</li>\r\n                        <li>P{orders.countProduct*orders.price}</li>\r\n                        <li>\r\n                            <div className={`${styles.remove}`} onClick={()=>{\r\n                                    orderRemover(orders.index)\r\n                                }}>\r\n                                    Remove\r\n                            </div>\r\n                        </li>\r\n                    \r\n                    </ul>  \r\n                    ))\r\n                    }\r\n                    </div>\r\n                        : \r\n                        setView(!view)\r\n                    }\r\n                    <div>\r\n                        <span className={`${styles.alignright}`}>Total : P{total}</span>\r\n                        <span className={`${styles.alignright}`}>\r\n                            <button className={`${styles.checkoutbtn}`} onClick={()=>checkout()}>Check out</button>\r\n                        </span>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ViewCart;","F:\\React Applications\\my-barber\\src\\UI\\NavBar\\NavBar.js",["163","164","165","166","167","168"],"import React, { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Link, Route, Switch, useRouteMatch } from 'react-router-dom'; \r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport styles from './NavBar.module.css';\r\n\r\nconst NavBar = (props) => {\r\n    let { path, url } = useRouteMatch();\r\n\r\n    useEffect(() => {\r\n        if(window.location.pathname === '/dashboard'){\r\n            document.getElementById('manage-products').classList.add(`${styles.active}`)\r\n        }else if(window.location.pathname.includes('/manage-payments')){\r\n            document.getElementById('manage-payments').classList.add(`${styles.active}`)\r\n        }else if(window.location.pathname.includes('/manage-accounts')){\r\n            document.getElementById('manage-accounts').classList.add(`${styles.active}`)\r\n        }else if(window.location.pathname.includes('/manage-products')){\r\n            document.getElementById('manage-products').classList.add(`${styles.active}`)\r\n        }\r\n        \r\n    },[])\r\n\r\n    const clearActive = (event) =>{\r\n        let li_elements = document.querySelectorAll('.menu-item')\r\n        for(let x = 0; x < li_elements.length; x++) {\r\n            li_elements[x].classList.remove(`${styles.active}`)\r\n        }\r\n        event.target.classList.add(`${styles.active}`)\r\n    }\r\n\r\n    const manageNav = ({event, nav}) =>{\r\n        clearActive(event);\r\n    }\r\n\r\n    const logout = () =>{\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n    }\r\n\r\n    return(\r\n            <ul className={`${styles.sidenav}`}>\r\n                    <Link  \r\n                    id='manage-products' \r\n                    className={`${styles.li} menu-item`}\r\n                    onClick={(event) => manageNav({event})} \r\n                    to={`${url}/manage-products`}> \r\n                        Manage Products\r\n                    </Link>\r\n                    <Link  \r\n                    id='manage-payments' \r\n                    className={`${styles.li} menu-item`}\r\n                    onClick={(event) => manageNav({event})} \r\n                    to={`${url}/manage-payments`}> \r\n                        Manage Payments\r\n                    </Link>\r\n                    <Link  \r\n                    id='manage-accounts' \r\n                    className={`${styles.li} menu-item`}\r\n                    onClick={(event) => manageNav({event})} \r\n                    to={`${url}/manage-accounts`}> \r\n                        Manage Accounts\r\n                    </Link>\r\n                    <div\r\n                    id='logout'\r\n                    className={`${styles.li} menu-item`}\r\n                    onClick={() => {logout()}}>\r\n                       Logout\r\n                    </div>\r\n               \r\n            </ul>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default NavBar;","F:\\React Applications\\my-barber\\src\\UI\\Button\\Button.js",[],"F:\\React Applications\\my-barber\\src\\UI\\TextField\\TextField.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":18,"column":14,"nodeType":"175","endLine":27,"endColumn":4},{"ruleId":"173","severity":1,"message":"176","line":27,"column":5,"nodeType":"177","endLine":27,"endColumn":7,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":31,"nodeType":"181","messageId":"182","endLine":2,"endColumn":43},{"ruleId":"173","severity":1,"message":"174","line":19,"column":15,"nodeType":"175","endLine":23,"endColumn":6},{"ruleId":"179","severity":1,"message":"180","line":2,"column":31,"nodeType":"181","messageId":"182","endLine":2,"endColumn":43},{"ruleId":"179","severity":1,"message":"183","line":17,"column":12,"nodeType":"181","messageId":"182","endLine":17,"endColumn":22},{"ruleId":"179","severity":1,"message":"184","line":52,"column":13,"nodeType":"181","messageId":"182","endLine":52,"endColumn":19},{"ruleId":"179","severity":1,"message":"185","line":2,"column":39,"nodeType":"181","messageId":"182","endLine":2,"endColumn":43},{"ruleId":"179","severity":1,"message":"186","line":14,"column":8,"nodeType":"181","messageId":"182","endLine":14,"endColumn":21},{"ruleId":"179","severity":1,"message":"187","line":17,"column":11,"nodeType":"181","messageId":"182","endLine":17,"endColumn":15},{"ruleId":"179","severity":1,"message":"188","line":17,"column":17,"nodeType":"181","messageId":"182","endLine":17,"endColumn":20},{"ruleId":"179","severity":1,"message":"189","line":18,"column":11,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":4,"column":26,"nodeType":"192","messageId":"193","endLine":4,"endColumn":40,"fix":"194"},{"ruleId":"190","severity":1,"message":"195","line":4,"column":64,"nodeType":"192","messageId":"193","endLine":4,"endColumn":82,"fix":"196"},{"ruleId":"179","severity":1,"message":"197","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"198","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":9,"column":12,"nodeType":"181","messageId":"182","endLine":9,"endColumn":22},{"ruleId":"179","severity":1,"message":"200","line":10,"column":22,"nodeType":"181","messageId":"182","endLine":10,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":14,"column":16,"nodeType":"175","endLine":18,"endColumn":6},{"ruleId":"173","severity":1,"message":"201","line":18,"column":7,"nodeType":"177","endLine":18,"endColumn":25,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":50,"column":43,"nodeType":"205","messageId":"206","endLine":50,"endColumn":45},{"ruleId":"179","severity":1,"message":"207","line":1,"column":10,"nodeType":"181","messageId":"182","endLine":1,"endColumn":20},{"ruleId":"179","severity":1,"message":"208","line":3,"column":27,"nodeType":"181","messageId":"182","endLine":3,"endColumn":33},{"ruleId":"179","severity":1,"message":"209","line":3,"column":41,"nodeType":"181","messageId":"182","endLine":3,"endColumn":46},{"ruleId":"179","severity":1,"message":"210","line":3,"column":48,"nodeType":"181","messageId":"182","endLine":3,"endColumn":54},{"ruleId":"179","severity":1,"message":"187","line":7,"column":11,"nodeType":"181","messageId":"182","endLine":7,"endColumn":15},{"ruleId":"179","severity":1,"message":"198","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":3,"column":31,"nodeType":"181","messageId":"182","endLine":3,"endColumn":43},{"ruleId":"179","severity":1,"message":"211","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":58,"column":19,"nodeType":"205","messageId":"206","endLine":58,"endColumn":21},{"ruleId":"179","severity":1,"message":"212","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"179","severity":1,"message":"213","line":4,"column":18,"nodeType":"181","messageId":"182","endLine":4,"endColumn":22},{"ruleId":"179","severity":1,"message":"214","line":4,"column":24,"nodeType":"181","messageId":"182","endLine":4,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":4,"column":31,"nodeType":"181","messageId":"182","endLine":4,"endColumn":43},{"ruleId":"179","severity":1,"message":"215","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":19},{"ruleId":"179","severity":1,"message":"198","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"216","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":13},{"ruleId":"203","severity":1,"message":"204","line":17,"column":27,"nodeType":"205","messageId":"206","endLine":17,"endColumn":29},{"ruleId":"179","severity":1,"message":"217","line":4,"column":51,"nodeType":"181","messageId":"182","endLine":4,"endColumn":63},{"ruleId":"179","severity":1,"message":"218","line":4,"column":65,"nodeType":"181","messageId":"182","endLine":4,"endColumn":78},{"ruleId":"219","severity":1,"message":"220","line":17,"column":35,"nodeType":"175","messageId":"221","endLine":17,"endColumn":37},{"ruleId":"179","severity":1,"message":"198","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"208","line":3,"column":27,"nodeType":"181","messageId":"182","endLine":3,"endColumn":33},{"ruleId":"179","severity":1,"message":"209","line":3,"column":41,"nodeType":"181","messageId":"182","endLine":3,"endColumn":46},{"ruleId":"179","severity":1,"message":"210","line":3,"column":48,"nodeType":"181","messageId":"182","endLine":3,"endColumn":54},{"ruleId":"179","severity":1,"message":"222","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":20},{"ruleId":"179","severity":1,"message":"187","line":9,"column":11,"nodeType":"181","messageId":"182","endLine":9,"endColumn":15},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["225"],"no-unused-vars","'ErrorMessage' is defined but never used.","Identifier","unusedVar","'cpassword1' is assigned a value but never used.","'result' is assigned a value but never used.","'Link' is defined but never used.","'DeleteProduct' is defined but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'navbar' is assigned a value but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"226","text":"227"},"Destructuring assignment pathname unnecessarily renamed.",{"range":"228","text":"229"},"'useEffect' is defined but never used.","'useState' is defined but never used.","'userdetail' is assigned a value but never used.","'setPayables' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPayables'. Either include it or remove the dependency array.",["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isRejected' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ManageProductMenu' is defined but never used.","'Formik' is defined but never used.","'Form' is defined but never used.","'Field' is defined but never used.","'createRef' is defined but never used.","'Axios' is defined but never used.","'orderUpdater' is defined but never used.","'useridUpdater' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},[104,118],"isAuth",[142,160],"pathname",{"desc":"233","fix":"234"},"Update the dependencies array to be: [dispatch]",{"range":"235","text":"236"},"Update the dependencies array to be: [fromdate, getPayables, todate]",{"range":"237","text":"238"},[1043,1045],"[dispatch]",[610,628],"[fromdate, getPayables, todate]"]